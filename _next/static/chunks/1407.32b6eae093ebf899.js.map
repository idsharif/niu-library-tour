{"version":3,"file":"static/chunks/1407.32b6eae093ebf899.js","mappings":"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","sources":["webpack://_N_E/./components/Hotspot/MarkerIcon.tsx","webpack://_N_E/<anon>"],"sourcesContent":["import {\n  I_Hotspot,\n  I_HotspotConfigStyle,\n  I_Scene,\n} from '@containers/Home/types';\nimport dynamic from 'next/dynamic';\nimport React, { memo, useMemo } from 'react';\nimport { MarkerIconWrapper } from './styled';\n\nconst SvgContainer = dynamic(() => import('@components/SvgContainer'));\n\ninterface Props {\n  hotspot: I_Hotspot;\n  marker?: I_HotspotConfigStyle['marker'];\n  listScene: I_Scene[];\n}\n\nconst MarkerIcon = ({ hotspot, marker, listScene }: Props) => {\n  const targetSceneHotspotPoint = useMemo(\n    () =>\n      hotspot.config?.point?.target_scene_id\n        ? listScene.filter(\n            item => item.id === hotspot?.config?.point?.target_scene_id,\n          )[0] || undefined\n        : undefined,\n    [hotspot, listScene],\n  );\n\n  const targetSceneHotspotPointImgSrc = useMemo(() => {\n    if (hotspot.type === 'point') {\n      if (hotspot.config?.point?.preview_box_img_type === 'thumbnail')\n        return (\n          targetSceneHotspotPoint?.screenshot ||\n          targetSceneHotspotPoint?.media?.src_thumb ||\n          targetSceneHotspotPoint?.media?.src_preview\n        );\n      if (\n        hotspot.config?.point?.preview_box_img_type === 'upload' &&\n        hotspot.config?.point?.preview_box_img_src\n      )\n        return hotspot?.config?.point?.preview_box_img_src;\n      return (\n        targetSceneHotspotPoint?.media?.src_thumb ||\n        targetSceneHotspotPoint?.media?.src_preview\n      );\n    }\n    return '';\n  }, [targetSceneHotspotPoint, hotspot]);\n\n  return (\n    <MarkerIconWrapper color={marker?.color || ''}>\n      <SvgContainer src={marker?.svg_src || ''} name={marker?.svg_name || ''}>\n        <img src={targetSceneHotspotPointImgSrc || ''} alt=\"\" />\n      </SvgContainer>\n    </MarkerIconWrapper>\n  );\n};\n\nexport default memo(MarkerIcon);\n"],"names":["SvgContainer","dynamic","__webpack_require__","e","then","bind","__webpack_exports__","memo","param","hotspot","marker","listScene","targetSceneHotspotPoint","useMemo","config","point","target_scene_id","filter","item","id","undefined","targetSceneHotspotPointImgSrc","type","preview_box_img_type","screenshot","media","src_thumb","src_preview","preview_box_img_src","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsx","MarkerIconWrapper","color","src","svg_src","name","svg_name","img","alt"],"sourceRoot":""}