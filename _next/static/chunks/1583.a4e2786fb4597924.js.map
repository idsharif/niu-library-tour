{"version":3,"file":"static/chunks/1583.a4e2786fb4597924.js","mappings":"ynBAOO,IAAMA,EAA0BC,SAAAA,EAAAA,CAAAA,GAAAA,CAAAA,UAAU,2FCS3CC,EAAU,GAAAC,EAAAC,GAAA,EAACC,EAAAA,CAAeA,CAAAA,CAACC,MAAO,CAAEC,SAAU,EAAG,EAAGC,KAAI,KAEjDC,EAAmBC,CAAAA,EAAAA,EAAAA,IAAAA,EAC9B,SAAAC,CAAA,CAA4D,SAAzDC,OAAAA,CAAeC,EAAAF,EAAEG,WAAAA,CAAkBC,EAAAA,EAAAA,QAAAA,CACpC,MACE,GAAAZ,EAAAC,GAAA,EAACJ,EAAuBA,UACtB,GAAAG,EAAAC,GAAA,EAACY,EAAAA,CAAIA,CAAAA,CAACC,UAAWf,EAASgB,IAHZJ,KAAAA,IAAAA,EAAc,GAAAD,CAAA,CAGgBM,SAH/CP,KAAAA,IAAAA,GAAeQ,WAITL,KAIT,GAGFM,EAAeZ,sHCxBTa,EAAaC,IAAQ,kBAAMC,QAAAC,GAAA,EAAAC,EAAAC,CAAA,OAAAD,EAAAC,CAAA,OAAAD,EAAAC,CAAA,OAAAD,EAAAC,CAAA,OAAAD,EAAAC,CAAA,SAAAC,IAAA,CAAAF,EAAAG,IAAA,CAAAH,EAAA,kEAC3BI,EAAkBP,IAAQ,kBAAMC,QAAAC,GAAA,EAAAC,EAAAC,CAAA,OAAAD,EAAAC,CAAA,OAAAD,EAAAC,CAAA,OAAAD,EAAAC,CAAA,SAAAC,IAAA,CAAAF,EAAAG,IAAA,CAAAH,EAAA,iEAyDtCK,CAAAA,EAAA,QAAerB,CAAAA,EAAAA,EAAAA,IAAAA,EAjDkB,SAAAC,CAAA,CAIpB,KAHXqB,EAAAA,EAAAA,OAAAA,CACAC,EAAAA,EAAAA,QAAAA,CACAC,EAAAA,EAAAA,oBAAAA,CAEMC,EAAMC,CAAAA,EAAAA,EAAAA,MAAAA,EAAuB,IAAI,EAChCxB,EAAWyB,CAAAA,EAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAAA,EAAAA,EAAAA,EAAqB,aAArBA,CAAAA,EAAAA,CACXC,EAAkBD,CAAAA,EAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAAA,EAAAA,EAAAA,EAAqB,eAArBA,CAAAA,EAAAA,CAEnBE,EAAwBC,CAAAA,EAAAA,EAAAA,WAAAA,EAC5BC,SAAAA,CAAAA,CAAAA,QAAQP,EAAqBO,EAAMH,IACnC,CAACA,EAAgBJ,EAAqB,EAGxC,MACE,GAAAQ,EAAAtC,GAAA,EAAC0B,EAAAA,CACCE,QAASA,EACTC,SAAUA,EACVU,aAAc,GACdC,SAAQ,GACRC,MAAM,QACNC,UAAW,CAAEC,SAAU,QAASF,MAAO,MAAO,EAC9CG,kBAAiB,YAEjB,GAAAN,EAAAtC,GAAA,EAACK,EAAAA,OAAgBA,CAAAA,CAACG,QAASA,WACzB,GAAA8B,EAAAO,IAAA,EAACC,EAAAA,EAA+BA,CAAAA,CAACf,IAAKA,YACpC,GAAAO,EAAAtC,GAAA,EAAC+C,IAAAA,CACCC,cAAW,GACXC,UAAU,4BACVC,QAASrB,IAGX,GAAAS,EAAAtC,GAAA,EAACmD,MAAAA,CAAIF,UAAU,kBACb,GAAAX,EAAAtC,GAAA,EAACmD,MAAAA,CAAIF,UAAU,iBAAQ,kBAEzB,GAAAX,EAAAtC,GAAA,EAACmD,MAAAA,CAAIF,UAAU,mBACb,GAAAX,EAAAtC,GAAA,EAACkB,EAAAA,CACCkC,UAAU,GACVC,eAAc,GACdxB,SAAU,UAAM,CAAC,EACjByB,gBAAiB,GACjBC,SAAUpB,YAOxB","sources":["webpack://_N_E/./components/LoadingContainer/styled.ts","webpack://_N_E/./components/LoadingContainer/index.tsx","webpack://_N_E/./containers/Home/components/Collaboration/CommentScene/DialogCreateCommentScene.tsx","webpack://_N_E/<anon>"],"sourcesContent":["/**\n *\n * styled LoadingContainer\n *\n */\nimport styled from 'styled-components';\n\nexport const LoadingContainerWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  .ant-spin {\n    color: #d1005c;\n    &-container {\n      width: 100%;\n      height: 100%;\n    }\n    &-nested-loading {\n      width: 100%;\n      height: 100%;\n      > div > .ant-spin {\n        width: 100%;\n        height: 100%;\n        max-height: 100%;\n      }\n    }\n  }\n`;\n","/**\n *\n * LoadingContainer\n *\n */\nimport React, { memo } from 'react';\nimport { LoadingOutlined } from '@ant-design/icons';\nimport { Spin } from 'antd';\nimport { LoadingContainerWrapper } from './styled';\n\ninterface Props {\n  loading?: boolean;\n  description?: string;\n  children?: React.ReactNode;\n}\n\nconst antIcon = <LoadingOutlined style={{ fontSize: 24 }} spin />;\n\nexport const LoadingContainer = memo(\n  ({ loading = false, description = '', children }: Props) => {\n    return (\n      <LoadingContainerWrapper>\n        <Spin indicator={antIcon} tip={description} spinning={loading}>\n          {children}\n        </Spin>\n      </LoadingContainerWrapper>\n    );\n  },\n);\n\nexport default LoadingContainer;\n","import React, { memo, useCallback, useRef } from 'react';\nimport dynamic from 'next/dynamic';\nimport { useCollaborationMode } from '@containers/Home/global/TourStats';\nimport LoadingContainer from '@components/LoadingContainer';\nimport { DialogCreateCommentSceneWrapper } from './styled';\n\nconst CommentBox = dynamic(() => import('./CommentBox'));\nconst DialogContainer = dynamic(() => import('@components/DialogContainer'));\n\ninterface Props {\n  visible: boolean;\n  onCancel: () => void;\n  onCreateCommentScene: (data, krpanoInstance) => void;\n}\n\nconst DialogCreateCommentScene = ({\n  visible,\n  onCancel,\n  onCreateCommentScene,\n}: Props) => {\n  const ref = useRef<HTMLDivElement>(null!);\n  const [loading] = useCollaborationMode('loading');\n  const [krpanoInstance] = useCollaborationMode('krpanoRef');\n\n  const _onCreateCommentScene = useCallback(\n    data => onCreateCommentScene(data, krpanoInstance),\n    [krpanoInstance, onCreateCommentScene],\n  );\n\n  return (\n    <DialogContainer\n      visible={visible}\n      onCancel={onCancel}\n      maskClosable={false}\n      centered\n      width=\"500px\"\n      bodyStyle={{ maxWidth: '500px', width: '100%' }}\n      hiddenCloseButton\n    >\n      <LoadingContainer loading={loading}>\n        <DialogCreateCommentSceneWrapper ref={ref}>\n          <i\n            aria-hidden\n            className=\"fal fa-times --icon-close\"\n            onClick={onCancel}\n          />\n\n          <div className=\"header\">\n            <div className=\"title\">New Comment</div>\n          </div>\n          <div className=\"popover\">\n            <CommentBox\n              initValue=\"\"\n              isShowBtnReset\n              onCancel={() => {}}\n              isShowBtnCancel={false}\n              onSubmit={_onCreateCommentScene}\n            />\n          </div>\n        </DialogCreateCommentSceneWrapper>\n      </LoadingContainer>\n    </DialogContainer>\n  );\n};\nexport default memo(DialogCreateCommentScene);\n"],"names":["LoadingContainerWrapper","styled","antIcon","jsx_runtime","jsx","LoadingOutlined","style","fontSize","spin","LoadingContainer","memo","param","loading","_param_description","description","children","Spin","indicator","tip","spinning","_param_loading","components_LoadingContainer","CommentBox","dynamic","Promise","all","__webpack_require__","e","then","bind","DialogContainer","__webpack_exports__","visible","onCancel","onCreateCommentScene","ref","useRef","useCollaborationMode","krpanoInstance","_onCreateCommentScene","useCallback","data","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","maskClosable","centered","width","bodyStyle","maxWidth","hiddenCloseButton","jsxs","DialogCreateCommentSceneWrapper","i","aria-hidden","className","onClick","div","initValue","isShowBtnReset","isShowBtnCancel","onSubmit"],"sourceRoot":""}