{"version":3,"file":"static/chunks/2154.ab7a6ccebd8c0ebd.js","mappings":"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","sources":["webpack://_N_E/./containers/Home/components/MultipleStagingThumb/styled.ts","webpack://_N_E/./containers/Home/components/MultipleStagingThumb/index.tsx","webpack://_N_E/<anon>"],"sourcesContent":["import { FlexRowCenter } from '@styles/global-styles';\nimport styled from 'styled-components';\n\nexport const MultipleStagingThumbWrapper = styled.div`\n  position: absolute;\n  top: 50%;\n  right: 12px;\n  transform: translateY(-50%);\n  z-index: 2;\n  /* NOTE: theme default  */\n  &.default {\n  }\n  /* NOTE: theme solid */\n  &.custom1 {\n    right: initial;\n    left: 12px;\n  }\n  /* NOTE: theme base  */\n  &.basekrpano {\n    right: initial;\n    left: 12px;\n  }\n  @media (max-width: 575px) {\n    right: 8px;\n    &.basekrpano {\n      right: initial;\n      left: 8px;\n    }\n  }\n  .--list {\n    .--item {\n      transition: 0.15s ease-out;\n      width: 100px;\n      height: 100px;\n      margin: 0 6px;\n      border-radius: 8px;\n      ${FlexRowCenter};\n      overflow: hidden;\n      position: relative;\n      border: 2px solid rgba(255, 255, 255, 0.5);\n      /* transform: scale(.95); */\n      cursor: pointer;\n      @media (hover: hover) and (pointer: fine) {\n        &:hover {\n          border-color: #fff;\n          transform: scale(1.05);\n        }\n      }\n      &.active {\n        border-color: var(--color-primary);\n        box-shadow: 0 0 0 2px var(--color-primary);\n      }\n      @media (max-width: 575px) {\n        width: 56px;\n        height: 56px;\n      }\n      img {\n        width: 100%;\n        min-height: 100%;\n        object-fit: cover;\n      }\n      p {\n        z-index: 10;\n        position: absolute;\n        bottom: 0;\n        margin: 0;\n        left: 0;\n        right: 0;\n        white-space: nowrap;\n        text-overflow: ellipsis;\n        overflow: hidden;\n        color: #fff;\n        padding: 0.75rem 0.5rem 0.25rem;\n        background-image: linear-gradient(\n          to top,\n          rgba(0, 0, 0, 0.75),\n          transparent\n        );\n      }\n\n      &:not(:last-child) {\n        margin-bottom: 12px;\n      }\n    }\n  }\n`;\n","import {\n  selectSceneSelected,\n  selectThemeConfigGlobal,\n} from '@containers/Home/selectors';\nimport { I_Scene } from '@containers/Home/types';\nimport { Tooltip } from 'antd';\nimport { memo, useState, useCallback } from 'react';\nimport { useSelector } from 'react-redux';\nimport { MultipleStagingThumbWrapper } from './styled';\n\ninterface Props {\n  scenes?: I_Scene[];\n  callKrpano: (xml: string) => void;\n}\n\nconst MultipleStagingThumb = memo(({ scenes, callKrpano }: Props) => {\n  const [indexActive, setIndexActive] = useState(0);\n\n  const sceneSelected = useSelector(selectSceneSelected);\n  const themeConfig = useSelector(selectThemeConfigGlobal);\n\n  const onChangeSceneInternal = useCallback(\n    (index: number) => {\n      setIndexActive(index);\n      callKrpano(\n        `loadscene(0${index}, null, MERGE|KEEPMOVE|KEEPVIEW|KEEPHOTSPOTS, BLEND(${0.5}, easeInCubic))`,\n      );\n    },\n    [callKrpano],\n  );\n\n  return (\n    <MultipleStagingThumbWrapper className={themeConfig?.selected || ''}>\n      <div className=\"--list\">\n        <Tooltip placement=\"left\" title={sceneSelected.title || 'N/A'}>\n          <div\n            className={`--item ${indexActive === 0 ? 'active' : ''}`}\n            onClick={() => onChangeSceneInternal(0)}\n          >\n            <img\n              src={\n                sceneSelected.media?.src_thumb ||\n                sceneSelected.media?.src_preview ||\n                sceneSelected.media?.src ||\n                ''\n              }\n              alt=\"\"\n            />\n            <p className=\"\">{sceneSelected.title || 'N/A'}</p>\n          </div>\n        </Tooltip>\n\n        {scenes.map((scene, index) => (\n          <Tooltip placement=\"left\" title={scene.title || 'N/A'} key={scene.id}>\n            <div\n              className={`--item ${indexActive === index + 1 ? 'active' : ''}`}\n              onClick={() => onChangeSceneInternal(index + 1)}\n            >\n              <img\n                src={\n                  scene.media?.src_thumb ||\n                  scene.media?.src_preview ||\n                  scene.media?.src ||\n                  ''\n                }\n                alt=\"\"\n              />\n              <p className=\"\">{scene.title || 'N/A'}</p>\n            </div>\n          </Tooltip>\n        ))}\n      </div>\n    </MultipleStagingThumbWrapper>\n  );\n});\n\nexport default MultipleStagingThumb;\n"],"names":["MultipleStagingThumbWrapper","styled","FlexRowCenter","components_MultipleStagingThumb","memo","param","sceneSelected","scenes","callKrpano","useState","indexActive","setIndexActive","useSelector","selectSceneSelected","themeConfig","selectThemeConfigGlobal","onChangeSceneInternal","useCallback","index","concat","jsx_runtime","jsx","className","selected","jsxs","div","Tooltip","placement","title","onClick","img","src","media","src_thumb","src_preview","alt","p","map","scene","id"],"sourceRoot":""}