{"version":3,"file":"static/chunks/4197.917b341d26e250a4.js","mappings":"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","sources":["webpack://_N_E/./components/ArrowSlide/styled.tsx","webpack://_N_E/./components/Hotspot/Preview.styled.tsx","webpack://_N_E/./components/Hotspot/Preview.tsx","webpack://_N_E/./utils/xhrApi.ts","webpack://_N_E/<anon>"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ArrowSlideWrapper = styled.div`\n  position: absolute;\n  top: calc(50% - 27px) !important;\n  background: #fff !important;\n  opacity: 0.5 !important;\n  z-index: 2000;\n  width: 32px;\n  height: 32px;\n  display: flex !important;\n  justify-content: center;\n  align-items: center;\n  border-radius: 4px;\n  cursor: pointer;\n  &.control-prev {\n    left: 10px !important;\n    &:before {\n      border-right-color: #212121 !important;\n    }\n  }\n  &.control-next {\n    right: 10px !important;\n    &:before {\n      border-left-color: #212121 !important;\n    }\n  }\n`;\n","import { ArrowSlideWrapper } from '@components/ArrowSlide/styled';\nimport styled from 'styled-components';\n\nexport const PreviewWrapper = styled.div`\n  z-index: 10;\n  border-radius: 6px;\n  overflow: hidden;\n  border: 1px solid rgb(255 255 255 / 0.2);\n  width: max-content;\n  > div {\n    width: 100%;\n    height: 100%;\n  }\n  .video {\n    width: 320px;\n    height: 180px;\n    iframe {\n      width: 100% !important;\n      height: 100%;\n    }\n  }\n  .article {\n    width: 320px;\n    height: auto;\n    max-height: 70vh;\n    overflow: auto;\n    background: #fff;\n    padding: 0.75rem;\n    .ctn {\n      height: 100%;\n    }\n  }\n  .link {\n    width: 320px;\n    height: 180px;\n    iframe {\n      width: 320px;\n      height: 100%;\n    }\n  }\n  .images {\n    width: 320px;\n    height: auto;\n    background: #000;\n    position: relative;\n    ${ArrowSlideWrapper} {\n      top: calc(50% - 16px) !important;\n    }\n    .gallery-item {\n      width: 100%;\n      height: 200px;\n      background-position: center;\n      background-size: contain;\n      background-repeat: no-repeat;\n    }\n    .quick-play {\n      top: 50%;\n      left: 50%;\n      z-index: 10;\n      cursor: pointer;\n      position: absolute;\n      transform: translate(-50%, -50%);\n      i {\n        color: #fff;\n        font-size: 32px;\n      }\n    }\n  }\n  .point {\n    img {\n      width: 200px;\n      height: auto;\n    }\n  }\n`;\n","/* eslint-disable react/no-danger */\nimport { I_Hotspot, I_Post, I_Scene } from '@containers/Home/types';\nimport { FlickityStyle } from '@styles/flickity';\nimport { convertLinkVideoToPlayable } from '@utils/helper';\nimport { getDetailPost } from '@utils/xhrApi';\nimport React, { memo, useCallback, useEffect, useMemo, useState } from 'react';\nimport Flickity from 'react-flickity-component';\n// import Pannellum from 'pannellum-react/es/elements/Pannellum';\nimport { PreviewWrapper } from './Preview.styled';\n\ninterface Props {\n  hotspot: I_Hotspot;\n  listScene: I_Scene[];\n  listPost: I_Post[];\n  onClick: () => void;\n}\n\nexport const Preview = memo(\n  ({ hotspot, listPost, listScene, onClick }: Props) => {\n    const [post, setPost] = useState<I_Post | undefined>(undefined);\n\n    const onGetDetailPost = useCallback(\n      async id => {\n        try {\n          let item = listPost.find(el => el.id === id);\n          if (!item) {\n            const { data } = await getDetailPost(id);\n            item = data.data;\n          }\n          setPost(post);\n        } catch (err) {\n          console.log(err);\n          setPost(undefined);\n        }\n      },\n      [listPost, post],\n    );\n\n    useEffect(() => {\n      if (hotspot.type === 'article' && hotspot.config.article.post_id)\n        onGetDetailPost(hotspot.config.article.post_id);\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [hotspot]);\n\n    const targetSceneHotspotPoint = useMemo(\n      () =>\n        hotspot.type === 'point' && hotspot.config?.point?.target_scene_id\n          ? listScene.filter(\n              item => item.id === hotspot.config.point.target_scene_id,\n            )[0] || undefined\n          : undefined,\n      [hotspot, listScene],\n    );\n\n    const targetSceneHotspotPointImgSrc = useMemo(() => {\n      if (hotspot.type === 'point') {\n        if (hotspot.config?.point?.preview_box_img_type === 'thumbnail')\n          return (\n            targetSceneHotspotPoint?.screenshot ||\n            targetSceneHotspotPoint?.media?.src_preview\n          );\n        if (\n          hotspot.config?.point?.preview_box_img_type === 'upload' &&\n          hotspot.config?.point?.preview_box_img_src\n        )\n          return hotspot?.config?.point?.preview_box_img_src;\n        return targetSceneHotspotPoint?.media?.src_preview;\n      }\n      return '';\n    }, [targetSceneHotspotPoint, hotspot]);\n\n    return (\n      <PreviewWrapper>\n        {hotspot.type === 'video' && hotspot.config?.video?.url && (\n          <div className=\"video\">\n            <iframe\n              title=\"title\"\n              width=\"100%\"\n              height=\"100%\"\n              src={`${convertLinkVideoToPlayable(hotspot.config?.video?.url)}`}\n              allowFullScreen\n              allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n            />\n          </div>\n        )}\n        {/* {hotspot.type === 'link' && hotspot.config?.link.url && (\n        <div className=\"link\">\n          <iframe\n            title=\"title\"\n            width=\"100%\"\n            height=\"100%\"\n            src={`${hotspot.config?.link.url}`}\n            frameBorder=\"0\"\n            allowFullScreen\n          />\n        </div>\n      )} */}\n        {hotspot.type === 'article' && post?.id && (\n          <div className=\"article\">\n            <div\n              className=\"ctn ctn__html\"\n              dangerouslySetInnerHTML={{ __html: post?.content }}\n            />\n          </div>\n        )}\n        {hotspot.type === 'image' &&\n          hotspot.config?.image?.galleries?.length && (\n            <div className=\"images\">\n              <div className=\"quick-play\" onClick={onClick}>\n                <i aria-hidden className=\"fas fa-search-plus\" />\n              </div>\n              <Flickity\n                elementType=\"div\"\n                className=\"carousel\"\n                options={{\n                  contain: true,\n                  prevNextButtons: true,\n                  pageDots: false,\n                  lazyLoad: true,\n                  cellAlign: 'left',\n                }}\n              >\n                {hotspot.config.image.galleries.map(item => (\n                  <div\n                    key={item.id}\n                    className=\"gallery-item\"\n                    style={{ backgroundImage: `url(${item.src})` }}\n                  />\n                ))}\n              </Flickity>\n              <FlickityStyle />\n            </div>\n          )}\n        {hotspot.type === 'point' && targetSceneHotspotPoint && (\n          <div className=\"point\">\n            <img src={targetSceneHotspotPointImgSrc} alt=\"123\" />\n            {/* <Pannellum\n            width=\"240px\"\n            height=\"140px\"\n            image={targetSceneHotspotPoint?.media?.src_preview || ''}\n            autoRotate={2}\n            autoLoad\n            draggable\n            showControls={false}\n            onLoad={() => {\n              console.log('panorama loaded');\n            }}\n          /> */}\n          </div>\n        )}\n      </PreviewWrapper>\n    );\n  },\n);\n\nexport default Preview;\n","import { BaseXHR } from './axios';\n\nexport const getDetailPost = id => BaseXHR.$get('/post/getPublish', { id });\n"],"names":["ArrowSlideWrapper","styled","PreviewWrapper","Preview","memo","param","hotspot","listPost","listScene","onClick","useState","undefined","post","setPost","onGetDetailPost","useCallback","_async_to_generator","Z","id","find","el","getDetailPost","data","sent","err","useEffect","type","config","article","post_id","targetSceneHotspotPoint","useMemo","point","target_scene_id","filter","item","targetSceneHotspotPointImgSrc","preview_box_img_type","screenshot","media","src_preview","preview_box_img_src","jsx_runtime","jsxs","video","url","jsx","div","className","iframe","title","width","height","src","concat","convertLinkVideoToPlayable","allowFullScreen","allow","dangerouslySetInnerHTML","__html","content","image","galleries","length","i","aria-hidden","Flickity","elementType","options","contain","prevNextButtons","pageDots","lazyLoad","cellAlign","map","style","backgroundImage","FlickityStyle","img","alt","Hotspot_Preview","BaseXHR"],"sourceRoot":""}