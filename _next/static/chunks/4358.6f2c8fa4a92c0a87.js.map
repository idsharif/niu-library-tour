{"version":3,"file":"static/chunks/4358.6f2c8fa4a92c0a87.js","mappings":"k5CAGO,IAAMA,EAAsBC,SAAAA,EAAAA,CAAAA,GAAAA,CAAAA,UAAU,sFAoBvCC,EAAAA,EAAaA,CAObA,EAAAA,EAAaA,ECfNC,EAAe,SAAAC,CAAA,CAAwC,KAArCC,EAAAA,EAAAA,OAAAA,CAASC,EAAAA,EAAAA,IAAAA,CAAMC,EAAAA,EAAAA,QAAAA,CACtCC,EAAkBC,CAAAA,EAAAA,EAAAA,EAAAA,EAAYC,EAAAA,EAAqBA,EACzD,MAWE,GAAAC,EAAAC,IAAA,EAACZ,EAAmBA,CAACa,UAAW,GAAyBC,MAAA,CAAtBT,EAAU,OAAS,EAAE,YACtD,GAAAM,EAAAI,GAAA,EAACC,MAAAA,CAAIH,UAAU,gBACb,GAAAF,EAAAI,GAAA,EAACE,OAAAA,UAAMC,EAAAA,CAAS,CAACV,EAAgB,CAACW,uBAAuB,KAE3D,GAAAR,EAAAC,IAAA,EAACI,MAAAA,CAAIH,UAAU,mBACb,GAAAF,EAAAI,GAAA,EAACK,SAAAA,CAAOC,KAAK,SAASR,UAAU,aAAaS,QAASf,WACnDW,EAAAA,CAAS,CAACV,EAAgB,CAACe,SAAS,GAEvC,GAAAZ,EAAAI,GAAA,EAACK,SAAAA,CAAOC,KAAK,SAASR,UAAU,SAASS,QAAShB,WAC/CY,EAAAA,CAAS,CAACV,EAAgB,CAACgB,KAAK,QAM3C,EAEAC,EAAeC,CAAAA,EAAAA,EAAAA,IAAAA,EAAKvB,0DC7Cb,IAAMe,EAAY,CACvBS,GAAI,CACFR,wBAAyB,mCACzBK,MAAO,KACPD,UAAW,SACXK,qBAAsB,oBACtBC,mBAAoB,YACpBC,oBAAqB,aACrBC,cAAe,aACfC,oBAAqB,YACrBC,6BAA8B,eAC9BC,8BAA+B,aAC/BC,qBAAsB,cACtBC,qBAAsB,cACtBC,sBAAuB,SACvBC,6BAA8B,kBAC9BC,4BAA6B,uBAC7BC,iBAAkB,UAClBC,qBAAsB,oBACtBC,qBAAsB,cACtBC,qBAAsB,qBACtBC,yBAA0B,mBAC1BC,uBAAwB,eACxBC,qCAAsC,kBACtCC,oCAAqC,gBACvC,EACAC,GAAI,CACF7B,wBAAyB,wBACzBK,MAAO,KACPD,UAAW,SACXK,qBAAsB,mBACtBC,mBAAoB,oBACpBC,oBAAqB,oBACrBE,oBAAqB,YACrBD,cAAe,aACfE,6BAA8B,kBAC9BC,8BAA+B,kBAC/BC,qBAAsB,mBACtBC,qBAAsB,YACtBC,sBAAuB,OACvBC,6BAA8B,sBAC9BC,4BAA6B,2BAC7BC,iBAAkB,YAClBC,qBAAsB,2CACtBC,qBAAsB,kBACtBC,qBAAsB,qBACtBC,yBAA0B,eAC1BC,uBAAwB,kBACxBC,qCAAsC,qBACtCC,oCAAqC,oBACvC,CACF","sources":["webpack://_N_E/./components/ModalConfirm/styled.tsx","webpack://_N_E/./components/ModalConfirm/index.tsx","webpack://_N_E/./containers/Home/language.ts","webpack://_N_E/<anon>"],"sourcesContent":["import { FlexRowCenter } from '@styles/global-styles';\nimport styled from 'styled-components';\n\nexport const ModalConfirmWrapper = styled.div`\n  display: block;\n  max-width: 365px;\n  border-radius: 8px;\n  box-shadow: 0 12px 24px rgb(0 0 0 / 0.2);\n  position: absolute;\n  top: 2rem;\n  left: 50%;\n  background: #fff;\n  color: initial;\n  z-index: 110;\n  transform: translateX(-50%);\n  padding: 12px 24px 0px;\n  @media (max-width: 575px) {\n    max-width: 90vw;\n    display: block;\n  }\n  .header {\n  }\n  .body {\n    ${FlexRowCenter}\n    margin: 0;\n    padding: 1rem;\n    text-align: center;\n  }\n  .footer {\n    padding: 0 0 1rem 0;\n    ${FlexRowCenter}\n    .btn {\n      width: 100px;\n      height: 28px;\n      cursor: pointer;\n      border-radius: 4px;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      padding: 0;\n      position: relative;\n      border: none;\n      outline: none;\n      font-weight: 600;\n      margin: 0 4px;\n      &:focus,\n      &:active {\n        outline: none;\n        border: none;\n      }\n    }\n    .ok {\n      color: white;\n      background: #007aff;\n    }\n    .cancel {\n      background: #fff;\n      color: initial;\n      border: 2px solid #ebebeb;\n    }\n  }\n`;\n","// import dynamic from 'next/dynamic';\nimport { memo } from 'react';\nimport { useSelector } from 'react-redux';\nimport { selectLanguageProject } from '@containers/Home/selectors';\nimport { LANGUAGES } from '@containers/Home/language';\nimport { ModalConfirmWrapper } from './styled';\n\n// const DialogContainer = dynamic(() => import('@components/DialogContainer'));\n\ninterface Props {\n  visible: boolean;\n  onOK: () => void;\n  onCancel: () => void;\n}\n\nexport const ModalConfirm = ({ visible, onOK, onCancel }: Props) => {\n  const languageProject = useSelector(selectLanguageProject);\n  return (\n    // <DialogContainer\n    //   visible={visible}\n    //   onCancel={onCancel}\n    //   hiddenCloseButton\n    //   maskClosable={false}\n    //   width=\"300px\"\n    //   top=\"1rem\"\n    //   isShowMask={false}\n    //   className=\"confirmModal\"\n    // >\n    <ModalConfirmWrapper className={`${visible ? 'show' : ''}`}>\n      <div className=\"body\">\n        <span>{LANGUAGES[languageProject].dialogConfirmSoundTitle}</span>\n      </div>\n      <div className=\"footer\">\n        <button type=\"button\" className=\"btn cancel\" onClick={onCancel}>\n          {LANGUAGES[languageProject].btnCancel}\n        </button>\n        <button type=\"button\" className=\"btn ok\" onClick={onOK}>\n          {LANGUAGES[languageProject].btnOK}\n        </button>\n      </div>\n    </ModalConfirmWrapper>\n    // </DialogContainer>\n  );\n};\n\nexport default memo(ModalConfirm);\n","export const LANGUAGES = {\n  en: {\n    dialogConfirmSoundTitle: 'Auto play sound on this website?',\n    btnOK: 'OK',\n    btnCancel: 'Cancel',\n    controlbarFirstScene: 'Go to first scene',\n    controlbarInfoTour: 'Info Tour',\n    controlbarInfoScene: 'Info Scene',\n    controlbarMap: 'Google Map',\n    controlbarFloorplan: 'Floorplan',\n    controlbarTurnOnSoundProject: 'Unmute sound',\n    controlbarTurnOffSoundProject: 'Mute sound',\n    controlbarSoundScene: 'Sound scene',\n    controlbarStopRotate: 'Stop Rotate',\n    controlbarStartRotate: 'Rotate',\n    controlbarStartAutoPlayScene: 'Auto play scene',\n    controlbarStopAutoPlayScene: 'Stop auto play scene',\n    controlbarVRMode: 'VR Mode',\n    controlbarFullscreen: 'Toggle Fullscreen',\n    controlbarViewNormal: 'View Normal',\n    controlbarViewPlanet: 'View Little Planet',\n    controlbarViewMirrorBall: 'View Mirror Ball',\n    controlbarSettingColor: 'Change color',\n    controlbarTurnOffModeMultipleStaging: 'Disable Staging',\n    controlbarTurnOnModeMultipleStaging: 'Enable Staging',\n  },\n  vi: {\n    dialogConfirmSoundTitle: 'Tự động phát nhạc?',\n    btnOK: 'OK',\n    btnCancel: 'Huỷ bỏ',\n    controlbarFirstScene: 'Cảnh đầu tiên',\n    controlbarInfoTour: 'Thông tin tour',\n    controlbarInfoScene: 'Thông tin cảnh',\n    controlbarFloorplan: 'Floorplan',\n    controlbarMap: 'Google Map',\n    controlbarTurnOnSoundProject: 'Bật âm lượng',\n    controlbarTurnOffSoundProject: 'Tắt âm lượng',\n    controlbarSoundScene: 'Âm thanh cảnh',\n    controlbarStopRotate: 'Dừng xoay',\n    controlbarStartRotate: 'Xoay',\n    controlbarStartAutoPlayScene: 'Tự động chuyển cảnh',\n    controlbarStopAutoPlayScene: 'Dừng tự động chuyển cảnh',\n    controlbarVRMode: 'Chế độ VR',\n    controlbarFullscreen: 'Chuyển đổi chế độ toàn màn hình',\n    controlbarViewNormal: 'Chế độ mặc định',\n    controlbarViewPlanet: 'Chế độ toàn cầu',\n    controlbarViewMirrorBall: 'Chế độ gương',\n    controlbarSettingColor: 'Thay đổi màu',\n    controlbarTurnOffModeMultipleStaging: 'Tắt chế độ Staging',\n    controlbarTurnOnModeMultipleStaging: 'Bật chế độ Staging',\n  },\n};\n"],"names":["ModalConfirmWrapper","styled","FlexRowCenter","ModalConfirm","param","visible","onOK","onCancel","languageProject","useSelector","selectLanguageProject","jsx_runtime","jsxs","className","concat","jsx","div","span","LANGUAGES","dialogConfirmSoundTitle","button","type","onClick","btnCancel","btnOK","components_ModalConfirm","memo","en","controlbarFirstScene","controlbarInfoTour","controlbarInfoScene","controlbarMap","controlbarFloorplan","controlbarTurnOnSoundProject","controlbarTurnOffSoundProject","controlbarSoundScene","controlbarStopRotate","controlbarStartRotate","controlbarStartAutoPlayScene","controlbarStopAutoPlayScene","controlbarVRMode","controlbarFullscreen","controlbarViewNormal","controlbarViewPlanet","controlbarViewMirrorBall","controlbarSettingColor","controlbarTurnOffModeMultipleStaging","controlbarTurnOnModeMultipleStaging","vi"],"sourceRoot":""}