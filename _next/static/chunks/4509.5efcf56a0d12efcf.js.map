{"version":3,"file":"static/chunks/4509.5efcf56a0d12efcf.js","mappings":"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","sources":["webpack://_N_E/./containers/Home/components/ActionHotspot.tsx","webpack://_N_E/./containers/Home/hook/useGetDetailPost.tsx","webpack://_N_E/./utils/xhrApi.ts","webpack://_N_E/<anon>"],"sourcesContent":["import {\n  selectHotspotSelected,\n  selectListScene,\n  selectSceneSelected,\n} from '@containers/Home/selectors';\nimport { actions } from '@containers/Home/slice';\nimport { useGoogleAnalytics } from '@utils/hooks/useGoogleAnalytics';\nimport dynamic from 'next/dynamic';\nimport { memo, useCallback, useEffect, useMemo, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useGetDetailPost } from '../hook/useGetDetailPost';\n\nconst DialogHotspotArticle = dynamic(\n  () => import('@components/DialogHotspotArticle'),\n);\nconst DialogHotspotProduct = dynamic(\n  () => import('@components/DialogHotspotProduct'),\n);\nconst Fancybox = dynamic(() => import('./FancyboxForHotspot'));\n\n// interface Props {}\n\nconst ActionHotspot = () => {\n  const dispatch = useDispatch();\n  const listScene = useSelector(selectListScene);\n  const hotspotSelected = useSelector(selectHotspotSelected);\n  const currentScene = useSelector(selectSceneSelected);\n\n  const [idArticle, setIdArticle] = useState<string | undefined>(undefined);\n  const [visibleDialogArticle, setVisibleDialogArticle] = useState(false);\n  const [visibleDialogProduct, setVisibleDialogProduct] = useState(false);\n\n  const { onPushEventClickedHotspot } = useGoogleAnalytics();\n\n  const { detailPost: infoArticle } = useGetDetailPost({ idPost: idArticle });\n\n  const infoLink = useMemo(\n    () => hotspotSelected?.config?.link || undefined,\n    [hotspotSelected],\n  );\n\n  const infoPoint = useMemo(\n    () =>\n      (hotspotSelected?.type === 'point'\n        ? hotspotSelected?.config?.point\n        : hotspotSelected?.config?.chevron) || undefined,\n    [hotspotSelected],\n  );\n\n  const onReset = useCallback(() => {\n    dispatch(actions.setHotspotSelected(null));\n    setVisibleDialogProduct(false);\n    setVisibleDialogArticle(false);\n    setIdArticle(undefined);\n  }, [dispatch]);\n\n  useEffect(() => {\n    // NOTE: update event google analytics\n    if (hotspotSelected) onPushEventClickedHotspot();\n\n    if (hotspotSelected && hotspotSelected?.type === 'article') {\n      setVisibleDialogArticle(true);\n      if (hotspotSelected?.config?.article?.post_id)\n        setIdArticle(hotspotSelected?.config?.article?.post_id);\n    }\n    if (hotspotSelected && hotspotSelected?.type === 'product')\n      setVisibleDialogProduct(true);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [hotspotSelected]);\n\n  useEffect(() => {\n    if (infoLink?.url) {\n      if (infoLink?.action !== 'iframe') {\n        window.open(\n          infoLink?.url,\n          infoLink?.action === 'same-tab' ? '_self' : '_blank',\n          infoLink?.action === 'new-window'\n            ? 'location=yes,height=570,width=520,scrollbars=yes,status=yes'\n            : null,\n        );\n        onReset();\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [infoLink]);\n\n  useEffect(() => {\n    if (infoPoint?.target_scene_id) {\n      const {\n        hlookat_default,\n        vlookat_default,\n        zoom_default,\n        isTransition,\n        typeTransition = 'NOBLEND',\n      } = infoPoint;\n      const scenes = listScene.filter(\n        item => item.id === infoPoint?.target_scene_id,\n      );\n      let sceneSelected = scenes[0];\n      sceneSelected = {\n        ...sceneSelected,\n        ...{\n          config: {\n            ...sceneSelected?.config,\n            default_view: {\n              ...sceneSelected?.config?.default_view,\n              ...{\n                x: hlookat_default || 0,\n                y: vlookat_default || 0,\n                zoom_lv: zoom_default || 90,\n              },\n            },\n            isTransition,\n            typeTransition: isTransition ? typeTransition : 'NOBLEND',\n          },\n        },\n      };\n      if (sceneSelected?.id) {\n        dispatch(actions.setSceneSelected(sceneSelected));\n        dispatch(actions.setprevSceneSelected(currentScene));\n        onReset();\n      }\n    }\n  }, [currentScene, dispatch, infoPoint, listScene, onReset]);\n\n  return (\n    <>\n      <DialogHotspotArticle\n        visible={visibleDialogArticle}\n        onCancel={onReset}\n        post={infoArticle}\n        width={hotspotSelected?.config?.article?.popup_width}\n      />\n      {hotspotSelected?.itemPrd && (\n        <DialogHotspotProduct\n          onCancel={onReset}\n          visible={visibleDialogProduct}\n          product={hotspotSelected?.itemPrd}\n        />\n      )}\n\n      {hotspotSelected && (\n        <Fancybox hotspotSelected={hotspotSelected} onClose={onReset} />\n      )}\n    </>\n  );\n};\n\nexport default memo(ActionHotspot);\n","import { getDetailPost } from '@utils/xhrApi';\nimport { useSelector } from 'react-redux';\nimport { useEffect, useCallback, useMemo, useState } from 'react';\nimport { I_Post } from '../types';\nimport { selectListPostUsedOnTour } from '../selectors';\n\ninterface Props {\n  idPost: string;\n}\n\nexport const useGetDetailPost = ({ idPost }: Props) => {\n  const listPostUsedOnTour = useSelector(selectListPostUsedOnTour);\n\n  const [loading, setLoading] = useState(false);\n  const [detailPost, setDetailPost] = useState<I_Post | undefined>(undefined);\n\n  const onGetDetailPost = useCallback(async () => {\n    setLoading(true);\n    try {\n      let post = listPostUsedOnTour.find(item => item.id === idPost);\n      if (!post) {\n        const { data } = await getDetailPost(idPost);\n        post = data.data;\n      }\n      setDetailPost(post);\n    } catch (err) {\n      console.log(err);\n      setDetailPost(undefined);\n    } finally {\n      setLoading(false);\n    }\n  }, [idPost, listPostUsedOnTour]);\n\n  useEffect(() => {\n    if (idPost) onGetDetailPost();\n    else setDetailPost(undefined);\n    return () => {\n      setLoading(false);\n      setDetailPost(undefined);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [idPost]);\n\n  return useMemo(\n    () => ({ loading, detailPost, onGetDetailPost }),\n    [detailPost, loading, onGetDetailPost],\n  );\n};\n","import { BaseXHR } from './axios';\n\nexport const getDetailPost = id => BaseXHR.$get('/post/getPublish', { id });\n"],"names":["DialogHotspotArticle","dynamic","__webpack_require__","e","then","bind","DialogHotspotProduct","Promise","all","Fancybox","__webpack_exports__","memo","hotspotSelected","dispatch","useDispatch","listScene","useSelector","selectListScene","selectHotspotSelected","currentScene","selectSceneSelected","useState","undefined","idArticle","setIdArticle","visibleDialogArticle","setVisibleDialogArticle","visibleDialogProduct","setVisibleDialogProduct","onPushEventClickedHotspot","useGoogleAnalytics","detailPost","useGetDetailPost","idPost","infoLink","useMemo","config","link","infoPoint","type","point","chevron","onReset","useCallback","actions","useEffect","article","post_id","url","action","window","open","target_scene_id","sceneSelected","hlookat_default","vlookat_default","zoom_default","isTransition","typeTransition","scenes","filter","item","id","_swc_helpers_src_object_spread_mjs__WEBPACK_IMPORTED_MODULE_9__","Z","_swc_helpers_src_object_spread_props_mjs__WEBPACK_IMPORTED_MODULE_10__","default_view","x","y","zoom_lv","_infoPoint_typeTransition","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsxs","Fragment","jsx","visible","onCancel","post","infoArticle","width","popup_width","itemPrd","product","onClose","param","listPostUsedOnTour","selectListPostUsedOnTour","loading","setLoading","setDetailPost","onGetDetailPost","_swc_helpers_src_async_to_generator_mjs__WEBPACK_IMPORTED_MODULE_5__","find","getDetailPost","data","sent","err","BaseXHR"],"sourceRoot":""}