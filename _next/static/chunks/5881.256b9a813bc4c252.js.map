{"version":3,"file":"static/chunks/5881.256b9a813bc4c252.js","mappings":"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","sources":["webpack://_N_E/./node_modules/antd/es/_util/motion.js","webpack://_N_E/./node_modules/antd/es/_util/type.js","webpack://_N_E/./containers/Home/global/TourStats.tsx","webpack://_N_E/./containers/Home/hook/useControlbarConfig.tsx","webpack://_N_E/./containers/Home/language.ts","webpack://_N_E/./containers/ThemeBaseKrpano/SideToolbar.tsx","webpack://_N_E/./node_modules/rc-util/es/hooks/useLayoutEffect.js","webpack://_N_E/./node_modules/react-hooks-global-state/dist/index.modern.js","webpack://_N_E/<anon>"],"sourcesContent":["import { tuple } from './type';\n// ================== Collapse Motion ==================\nvar getCollapsedHeight = function getCollapsedHeight() {\n  return {\n    height: 0,\n    opacity: 0\n  };\n};\nvar getRealHeight = function getRealHeight(node) {\n  var scrollHeight = node.scrollHeight;\n  return {\n    height: scrollHeight,\n    opacity: 1\n  };\n};\nvar getCurrentHeight = function getCurrentHeight(node) {\n  return {\n    height: node ? node.offsetHeight : 0\n  };\n};\nvar skipOpacityTransition = function skipOpacityTransition(_, event) {\n  return (event === null || event === void 0 ? void 0 : event.deadline) === true || event.propertyName === 'height';\n};\nvar collapseMotion = {\n  motionName: 'ant-motion-collapse',\n  onAppearStart: getCollapsedHeight,\n  onEnterStart: getCollapsedHeight,\n  onAppearActive: getRealHeight,\n  onEnterActive: getRealHeight,\n  onLeaveStart: getCurrentHeight,\n  onLeaveActive: getCollapsedHeight,\n  onAppearEnd: skipOpacityTransition,\n  onEnterEnd: skipOpacityTransition,\n  onLeaveEnd: skipOpacityTransition,\n  motionDeadline: 500\n};\nvar SelectPlacements = tuple('bottomLeft', 'bottomRight', 'topLeft', 'topRight');\nvar getTransitionDirection = function getTransitionDirection(placement) {\n  if (placement !== undefined && (placement === 'topLeft' || placement === 'topRight')) {\n    return \"slide-down\";\n  }\n  return \"slide-up\";\n};\nvar getTransitionName = function getTransitionName(rootPrefixCls, motion, transitionName) {\n  if (transitionName !== undefined) {\n    return transitionName;\n  }\n  return \"\".concat(rootPrefixCls, \"-\").concat(motion);\n};\nexport { getTransitionName, getTransitionDirection };\nexport default collapseMotion;","// https://stackoverflow.com/questions/46176165/ways-to-get-string-literal-type-of-array-values-without-enum-overhead\nexport var tuple = function tuple() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n  return args;\n};\nexport var tupleNum = function tupleNum() {\n  for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    args[_key2] = arguments[_key2];\n  }\n  return args;\n};","import { Type_RefFuncKrpano } from '@components/Krpano/types';\nimport { createGlobalState } from 'react-hooks-global-state';\nimport { I_CommentScene, I_PayloadCommentScene } from '../types';\n\nconst { useGlobalState: useVLookatKrpano } = createGlobalState<{\n  vlookat?: number;\n}>({ vlookat: undefined });\n\nconst { useGlobalState: useHLookatKrpano } = createGlobalState<{\n  hlookat?: number;\n}>({ hlookat: undefined });\n\nconst { useGlobalState: useZoomKrpano } = createGlobalState<{ zoom?: number }>({\n  zoom: undefined,\n});\n\nconst { useGlobalState: useCollaborationMode } = createGlobalState<{\n  loading: boolean;\n  krpanoRef?: Type_RefFuncKrpano;\n  commentSceneSelected?: I_CommentScene | null;\n  isShowDialogCreateCommentScene?: boolean;\n  commentSceneTemporary?: I_PayloadCommentScene | null;\n}>({\n  loading: false,\n  krpanoRef: undefined,\n  commentSceneSelected: null,\n  isShowDialogCreateCommentScene: false,\n  commentSceneTemporary: null,\n});\n\nconst { useGlobalState: useTourStats } = createGlobalState<{\n  stats: {\n    isShowControlbar?: boolean;\n    btnDirectionActive?: string;\n  };\n}>({\n  stats: {\n    isShowControlbar: true, // for theme\n    btnDirectionActive: '',\n  },\n});\n\nconst { useGlobalState: useTourEventState } = createGlobalState<{\n  state: {\n    isLoaded?: boolean;\n    idPostProjectSelected?: string;\n    visibleDialogPostProject?: boolean;\n    idPostSceneSelected?: string;\n    visibleDialogPostScene?: boolean;\n    isSoundOnScene?: boolean;\n    isVisibleMap?: boolean;\n    isVisibleFloorplan?: boolean;\n    isVisiblePopupIntro?: boolean;\n    isActiveModeMultipleStaging?: boolean;\n  };\n}>({\n  state: {\n    isLoaded: false,\n    //\n    idPostProjectSelected: '',\n    visibleDialogPostProject: false,\n    //\n    idPostSceneSelected: '',\n    visibleDialogPostScene: false,\n    isSoundOnScene: false,\n    //\n    isVisibleMap: true,\n    isVisibleFloorplan: true,\n    isVisiblePopupIntro: undefined,\n    isActiveModeMultipleStaging: false,\n  },\n});\n\nexport {\n  useTourStats,\n  useZoomKrpano,\n  useHLookatKrpano,\n  useVLookatKrpano,\n  useTourEventState,\n  useCollaborationMode,\n};\n","import { useCallback, useMemo } from 'react';\nimport { useSelector } from 'react-redux';\nimport { selectConfigControlbar } from '../selectors';\nimport { I_ControlbarKey } from '../types';\n\nexport const useControlbarConfig = () => {\n  const controlbarConfig = useSelector(selectConfigControlbar);\n\n  const onCheckIsShowContentControlbarItem = useCallback(\n    (type: I_ControlbarKey) => {\n      if (type) {\n        const config = controlbarConfig[type];\n        return !config.isHide;\n      }\n      return true;\n    },\n    [controlbarConfig],\n  );\n\n  const onRenderContentControlbarItem = useCallback(\n    (type: I_ControlbarKey) => {\n      if (type) {\n        const config = controlbarConfig[type];\n        if (config.type === 'icon' && config.icon)\n          return (\n            <i aria-hidden className={`controlbar-item__icon ${config.icon}`} />\n          );\n        if (config.type === 'image' && config.image?.src)\n          return (\n            <img\n              className=\"controlbar-item__img\"\n              src={config.image?.src}\n              alt=\"img\"\n            />\n          );\n      }\n      return '';\n    },\n    [controlbarConfig],\n  );\n\n  return useMemo(\n    () => ({\n      onRenderContentControlbarItem,\n      onCheckIsShowContentControlbarItem,\n    }),\n    [onRenderContentControlbarItem, onCheckIsShowContentControlbarItem],\n  );\n};\n","export const LANGUAGES = {\n  en: {\n    dialogConfirmSoundTitle: 'Auto play sound on this website?',\n    btnOK: 'OK',\n    btnCancel: 'Cancel',\n    controlbarFirstScene: 'Go to first scene',\n    controlbarInfoTour: 'Info Tour',\n    controlbarInfoScene: 'Info Scene',\n    controlbarMap: 'Google Map',\n    controlbarFloorplan: 'Floorplan',\n    controlbarTurnOnSoundProject: 'Unmute sound',\n    controlbarTurnOffSoundProject: 'Mute sound',\n    controlbarSoundScene: 'Sound scene',\n    controlbarStopRotate: 'Stop Rotate',\n    controlbarStartRotate: 'Rotate',\n    controlbarStartAutoPlayScene: 'Auto play scene',\n    controlbarStopAutoPlayScene: 'Stop auto play scene',\n    controlbarVRMode: 'VR Mode',\n    controlbarFullscreen: 'Toggle Fullscreen',\n    controlbarViewNormal: 'View Normal',\n    controlbarViewPlanet: 'View Little Planet',\n    controlbarViewMirrorBall: 'View Mirror Ball',\n    controlbarSettingColor: 'Change color',\n    controlbarTurnOffModeMultipleStaging: 'Disable Staging',\n    controlbarTurnOnModeMultipleStaging: 'Enable Staging',\n  },\n  vi: {\n    dialogConfirmSoundTitle: 'Tự động phát nhạc?',\n    btnOK: 'OK',\n    btnCancel: 'Huỷ bỏ',\n    controlbarFirstScene: 'Cảnh đầu tiên',\n    controlbarInfoTour: 'Thông tin tour',\n    controlbarInfoScene: 'Thông tin cảnh',\n    controlbarFloorplan: 'Floorplan',\n    controlbarMap: 'Google Map',\n    controlbarTurnOnSoundProject: 'Bật âm lượng',\n    controlbarTurnOffSoundProject: 'Tắt âm lượng',\n    controlbarSoundScene: 'Âm thanh cảnh',\n    controlbarStopRotate: 'Dừng xoay',\n    controlbarStartRotate: 'Xoay',\n    controlbarStartAutoPlayScene: 'Tự động chuyển cảnh',\n    controlbarStopAutoPlayScene: 'Dừng tự động chuyển cảnh',\n    controlbarVRMode: 'Chế độ VR',\n    controlbarFullscreen: 'Chuyển đổi chế độ toàn màn hình',\n    controlbarViewNormal: 'Chế độ mặc định',\n    controlbarViewPlanet: 'Chế độ toàn cầu',\n    controlbarViewMirrorBall: 'Chế độ gương',\n    controlbarSettingColor: 'Thay đổi màu',\n    controlbarTurnOffModeMultipleStaging: 'Tắt chế độ Staging',\n    controlbarTurnOnModeMultipleStaging: 'Bật chế độ Staging',\n  },\n};\n","import { Type_RefFuncKrpano } from '@components/Krpano/types';\nimport { useKrpano } from '@containers/Home/hook/useKrpano';\nimport { selectLanguageProject } from '@containers/Home/selectors';\nimport { Tooltip } from 'antd';\nimport React, { memo } from 'react';\nimport { useSelector } from 'react-redux';\nimport { LANGUAGES } from '@containers/Home/language';\nimport { useControlbarConfig } from '@containers/Home/hook/useControlbarConfig';\nimport { SideToolbarWrapper } from './styled';\n\ninterface Props {\n  krpanoRef?: Type_RefFuncKrpano;\n}\n\nconst SideToolbar = memo(({ krpanoRef }: Props) => {\n  const { onCheckIsShowContentControlbarItem, onRenderContentControlbarItem } =\n    useControlbarConfig();\n\n  const languageProject = useSelector(selectLanguageProject);\n\n  const {\n    // NOTE: info place\n    isShowIconInfoPlace,\n    onShowInfoPlace,\n    // NOTE: info scene\n    isShowIconInfoScene,\n    onToggleInfoScene,\n    // NOTE: floorplan\n    isShowIconFloorplan,\n    onToggleFloorplan,\n    // NOTE: map\n    isShowIconMap,\n    onToggleMap,\n  } = useKrpano({ krpanoRef });\n\n  return (isShowIconInfoPlace &&\n    onCheckIsShowContentControlbarItem('info_tour')) ||\n    (isShowIconInfoScene && onCheckIsShowContentControlbarItem('info_scene')) ||\n    (isShowIconFloorplan && onCheckIsShowContentControlbarItem('floorplan')) ||\n    (isShowIconMap && onCheckIsShowContentControlbarItem('map')) ? (\n    <SideToolbarWrapper>\n      {isShowIconInfoPlace && onCheckIsShowContentControlbarItem('info_tour') && (\n        <Tooltip\n          title={LANGUAGES[languageProject].controlbarInfoTour}\n          placement=\"left\"\n        >\n          <div className=\"itemSideBtn\" onClick={onShowInfoPlace}>\n            {onRenderContentControlbarItem('info_tour')}\n          </div>\n        </Tooltip>\n      )}\n\n      {isShowIconInfoScene && onCheckIsShowContentControlbarItem('info_scene') && (\n        <Tooltip\n          title={LANGUAGES[languageProject].controlbarInfoScene}\n          placement=\"left\"\n        >\n          <div\n            className=\"itemSideBtn\"\n            onClick={onToggleInfoScene.bind(this, undefined)}\n          >\n            {onRenderContentControlbarItem('info_scene')}\n          </div>\n        </Tooltip>\n      )}\n\n      {isShowIconFloorplan && onCheckIsShowContentControlbarItem('floorplan') && (\n        <Tooltip\n          title={LANGUAGES[languageProject].controlbarFloorplan}\n          placement=\"left\"\n        >\n          <div\n            className=\"itemSideBtn\"\n            onClick={onToggleFloorplan.bind(this, undefined)}\n          >\n            {onRenderContentControlbarItem('floorplan')}\n          </div>\n        </Tooltip>\n      )}\n\n      {isShowIconMap && onCheckIsShowContentControlbarItem('map') && (\n        <Tooltip\n          title={LANGUAGES[languageProject].controlbarMap}\n          placement=\"left\"\n        >\n          <div\n            className=\"itemSideBtn\"\n            onClick={onToggleMap.bind(this, undefined)}\n          >\n            {onRenderContentControlbarItem('map')}\n          </div>\n        </Tooltip>\n      )}\n    </SideToolbarWrapper>\n  ) : (\n    <div />\n  );\n});\n\nexport default SideToolbar;\n","import * as React from 'react';\nimport canUseDom from \"../Dom/canUseDom\";\n\n/**\n * Wrap `React.useLayoutEffect` which will not throw warning message in test env\n */\nvar useLayoutEffect = process.env.NODE_ENV !== 'test' && canUseDom() ? React.useLayoutEffect : React.useEffect;\nexport default useLayoutEffect;\nexport var useLayoutUpdateEffect = function useLayoutUpdateEffect(callback, deps) {\n  var firstMountRef = React.useRef(true);\n  useLayoutEffect(function () {\n    if (!firstMountRef.current) {\n      return callback();\n    }\n  }, deps);\n\n  // We tell react that first mount has passed\n  useLayoutEffect(function () {\n    firstMountRef.current = false;\n    return function () {\n      firstMountRef.current = true;\n    };\n  }, []);\n};","import{useReducer as t,useEffect as e,useRef as r,useState as o,useCallback as n}from\"react\";function s(){return(s=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var r=arguments[e];for(var o in r)Object.prototype.hasOwnProperty.call(r,o)&&(t[o]=r[o])}return t}).apply(this,arguments)}const c=(t,e)=>{if(!t.includes(e))throw new Error(`'${e}' not found. It must be provided in initialState as a property key.`)},a=\"production\"!==process.env.NODE_ENV?Symbol(\"UPDATE_STATE\"):Symbol(),l=(l,u)=>{const i=Object.keys(u);let p=u,d=null;const f={};i.forEach(t=>{f[t]=new Set});const E=(t,e)=>e.type===a?e.r?e.r(t):e.e:l(t,e),S=(t,e)=>{\"production\"!==process.env.NODE_ENV&&c(i,t);const r=r=>{return s({},r,{[t]:(o=r[t],n=e,\"function\"==typeof n?n(o):n)});var o,n};if(d)d({type:a,r});else{p=r(p);const e=p[t];f[t].forEach(t=>t(e))}},b=(t,e)=>{i.forEach(r=>{const o=e[r];t[r]!==o&&f[r].forEach(t=>t(o))})};return{useGlobalStateProvider:()=>{const[o,n]=t(E,p);e(()=>{if(d)throw new Error(\"Only one global state provider is allowed\");return d=n,n({type:a,e:p}),()=>{d=null}},[]);const s=r(o);b(s.current,o),s.current=o,e(()=>{p=o},[o])},useGlobalState:t=>{\"production\"!==process.env.NODE_ENV&&c(i,t);const[r,s]=o(p[t]);return e(()=>(f[t].add(s),s(p[t]),()=>{f[t].delete(s)}),[t]),[r,n(e=>S(t,e),[t])]},getGlobalState:t=>(\"production\"!==process.env.NODE_ENV&&c(i,t),p[t]),setGlobalState:S,getState:()=>p,setState:t=>{if(d)d({type:a,e:t});else{const e=p;p=t,b(e,p)}},dispatch:t=>{if(d)d(t);else{const e=p;p=l(p,t),b(e,p)}return t}}},u=t=>l((t,e)=>t,t),i=(t,e=t(void 0,{type:void 0}),r)=>r?r(i)(t,e):l(t,e),p=()=>{if(!window.__REDUX_DEVTOOLS_EXTENSION__)return t=>t;const{before:t,after:e}=(()=>{let t,e;return{before:r=>(o,n,c)=>{if(t=o,e=n,c)return c(r)(o,n);const a=r(o,n);return s({},a,{useGlobalState:t=>{const[e]=a.useGlobalState(t);return[e,()=>{throw new Error(\"Update is not allowed when using DevTools\")}]}})},after:r=>(o,n,c)=>{if(c)return c(r)(o,n);const a=r(t,e);let l=s({},o(n,{type:\"@@redux/INIT\"}),e);const u=[];return s({},a,{getState:()=>l,dispatch:t=>(l=o(l,t),a.setState(l.computedStates[l.currentStateIndex].state),u.forEach(t=>t()),t),subscribe:t=>(u.push(t),()=>{const e=u.indexOf(t);u.splice(e,1)})})}}})();return((...t)=>t.reduce((t,e)=>(...r)=>t(e(...r))))(t,window.__REDUX_DEVTOOLS_EXTENSION__(),e)};export{u as createGlobalState,i as createStore,p as reduxDevToolsExt};\n//# sourceMappingURL=index.modern.mjs.map\n"],"names":["getCollapsedHeight","height","opacity","getRealHeight","node","scrollHeight","skipOpacityTransition","_","event","deadline","propertyName","_type__WEBPACK_IMPORTED_MODULE_0__","b","getTransitionDirection","placement","undefined","getTransitionName","rootPrefixCls","motion","transitionName","concat","__webpack_exports__","motionName","onAppearStart","onEnterStart","onAppearActive","onEnterActive","onLeaveStart","offsetHeight","onLeaveActive","onAppearEnd","onEnterEnd","onLeaveEnd","motionDeadline","tuple","_len","arguments","length","args","_key","tupleNum","_len2","_key2","useGlobalState","createGlobalState","vlookat","hlookat","zoom","loading","krpanoRef","commentSceneSelected","isShowDialogCreateCommentScene","commentSceneTemporary","stats","isShowControlbar","btnDirectionActive","state","isLoaded","idPostProjectSelected","visibleDialogPostProject","idPostSceneSelected","visibleDialogPostScene","isSoundOnScene","isVisibleMap","isVisibleFloorplan","isVisiblePopupIntro","isActiveModeMultipleStaging","useControlbarConfig","controlbarConfig","useSelector","selectConfigControlbar","onCheckIsShowContentControlbarItem","useCallback","type","config","isHide","onRenderContentControlbarItem","icon","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsx","i","aria-hidden","className","image","src","img","alt","useMemo","LANGUAGES","en","dialogConfirmSoundTitle","btnOK","btnCancel","controlbarFirstScene","controlbarInfoTour","controlbarInfoScene","controlbarMap","controlbarFloorplan","controlbarTurnOnSoundProject","controlbarTurnOffSoundProject","controlbarSoundScene","controlbarStopRotate","controlbarStartRotate","controlbarStartAutoPlayScene","controlbarStopAutoPlayScene","controlbarVRMode","controlbarFullscreen","controlbarViewNormal","controlbarViewPlanet","controlbarViewMirrorBall","controlbarSettingColor","controlbarTurnOffModeMultipleStaging","controlbarTurnOnModeMultipleStaging","vi","SideToolbar","memo","param","languageProject","selectLanguageProject","useKrpano","isShowIconInfoPlace","onShowInfoPlace","isShowIconInfoScene","onToggleInfoScene","isShowIconFloorplan","onToggleFloorplan","isShowIconMap","onToggleMap","jsxs","SideToolbarWrapper","Tooltip","title","div","onClick","bind","_this","useLayoutEffect","_Dom_canUseDom__WEBPACK_IMPORTED_MODULE_1__","Z","react__WEBPACK_IMPORTED_MODULE_0__","useEffect","useLayoutUpdateEffect","callback","deps","firstMountRef","useRef","current","s","Object","assign","t","e","r","o","prototype","hasOwnProperty","call","apply","a","Symbol","l","u","keys","p","d","f","forEach","Set","E","S","n","useGlobalStateProvider","useReducer","useState","add","delete","getGlobalState","setGlobalState","getState","setState","dispatch"],"sourceRoot":""}