{"version":3,"file":"static/chunks/6163.8492e760da1d645d.js","mappings":"0JAYMA,EAAcC,CAAAA,EAAAA,EAAAA,IAAAA,EAAK,SAAAC,CAAA,CAAsD,KAAnDC,EAAAA,EAAAA,SAAAA,CAAWC,EAAAA,EAAAA,SAAAA,CAAWC,EAAAA,EAAAA,KAAAA,CAAOC,EAAAA,EAAAA,QAAAA,CACvD,MACE,GAAAC,EAAAC,GAAA,EAACC,EAAAA,CAAMA,CAAAA,CACLJ,MAAOA,EACPK,SAAU,GACVJ,SAAUA,EACVK,WAAU,GACVC,YAAY,eACZC,iBAAiB,QACjBC,gBAAgB,QAChBC,aAAc,SAACC,CAAAA,CAAOC,CAAAA,CAAAA,QACpBD,EAAME,WAAW,GACbD,EAAOE,KAAK,EACZF,EAAOE,KAAK,CAACD,WAAW,GAAGE,OAAO,CAACJ,EAAME,WAAW,KAAO,EAC3DD,EAAOE,KAAK,CAACD,WAAW,GAAGE,OAAO,CAACJ,EAAME,WAAW,KAAO,CAAC,EAElEd,UAAW,GAAmBiB,MAAA,CAAhBjB,GAAa,aAE1BD,EAAUmB,GAAG,CAACC,SAAAA,CAAAA,CAAAA,KAIFA,EAAyBA,EAHpC,SAAAhB,EAAAC,GAAA,EAACC,EAAAA,CAAAA,CAAAA,MAAa,EAAeJ,MAAOkB,EAAKC,EAAE,CAAEL,MAAOI,EAAKE,KAAK,UAC5D,GAAAlB,EAAAmB,IAAA,EAACC,EAAAA,EAA4BA,CAAAA,WAC3B,GAAApB,EAAAC,GAAA,EAACoB,MAAAA,CACCC,IAAKN,CAAAA,IAAU,GAAVA,CAAAA,EAAAA,EAAKO,KAAK,GAAVP,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAYQ,SAAS,GAAIR,CAAAA,IAAU,GAAVA,CAAAA,EAAAA,EAAKO,KAAK,GAAVP,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAYS,WAAW,GAAI,GACzDC,IAAKV,EAAKE,KAAK,GAEjB,GAAAlB,EAAAC,GAAA,EAAC0B,OAAAA,CAAK9B,UAAU,yBAAiBmB,EAAKE,KAAK,OAN3BF,EAAKC,EAAE,KAYnC,EAEAW,CAAAA,EAAA,QAAenC","sources":["webpack://_N_E/./containers/Home/components/Collaboration/SelectListScene.tsx","webpack://_N_E/<anon>"],"sourcesContent":["import React, { memo } from 'react';\nimport { Select } from 'antd';\nimport { I_Scene } from '@containers/Home/types';\nimport { SelectOptionWithImageWrapper } from './styled';\n\ninterface Props {\n  value: string;\n  className?: string;\n  onChange: (value: string) => void;\n  listScene: I_Scene[];\n}\n\nconst SelectScene = memo(({ listScene, className, value, onChange }: Props) => {\n  return (\n    <Select\n      value={value}\n      bordered={false}\n      onChange={onChange}\n      showSearch\n      placeholder=\"Select scene\"\n      optionFilterProp=\"label\"\n      optionLabelProp=\"label\"\n      filterOption={(input, option: any) =>\n        input.toLowerCase()\n          ? option.label &&\n            option.label.toLowerCase().indexOf(input.toLowerCase()) >= 0\n          : option.label.toLowerCase().indexOf(input.toLowerCase()) >= 0\n      }\n      className={`${className || ''}`}\n    >\n      {listScene.map(item => (\n        <Select.Option key={item.id} value={item.id} label={item.title}>\n          <SelectOptionWithImageWrapper>\n            <img\n              src={item.media?.src_thumb || item.media?.src_preview || ''}\n              alt={item.title}\n            />\n            <span className=\"text-ellipsis\">{item.title}</span>\n          </SelectOptionWithImageWrapper>\n        </Select.Option>\n      ))}\n    </Select>\n  );\n});\n\nexport default SelectScene;\n"],"names":["SelectScene","memo","param","listScene","className","value","onChange","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsx","Select","bordered","showSearch","placeholder","optionFilterProp","optionLabelProp","filterOption","input","option","toLowerCase","label","indexOf","concat","map","item","id","title","jsxs","SelectOptionWithImageWrapper","img","src","media","src_thumb","src_preview","alt","span","__webpack_exports__"],"sourceRoot":""}