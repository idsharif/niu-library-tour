{"version":3,"file":"static/chunks/7057.e6a09edf35be9a5f.js","mappings":"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","sources":["webpack://_N_E/./containers/Home/components/Tour.Sound.tsx","webpack://_N_E/<anon>"],"sourcesContent":["import React, {\n  useRef,\n  memo,\n  useCallback,\n  useEffect,\n  useState,\n  useMemo,\n} from 'react';\nimport dynamic from 'next/dynamic';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  selectConfigSoundProject,\n  selectDetailProject,\n  selectIsFirstScene,\n  selectSceneSelected,\n} from '@containers/Home/selectors';\nimport { actions } from '@containers/Home/slice';\nimport { useKrpano } from '@containers/Home/hook/useKrpano';\nimport { Type_RefFuncKrpano } from '@components/Krpano/types';\nimport { TourSettingWrapper } from './styled';\nimport { useTourEventState } from '../global/TourStats';\n\nconst ModalConfirm = dynamic(() => import('@components/ModalConfirm'));\n\ninterface Props {\n  krpanoRef: Type_RefFuncKrpano;\n}\n\nconst Tour = ({ krpanoRef }: Props) => {\n  const dispatch = useDispatch();\n  const soundSceneRef = useRef<HTMLAudioElement>(null!);\n  const soundProjectRef = useRef<HTMLAudioElement>(null!);\n\n  const { onSetSoundOnScene, onStartHotspotSound } = useKrpano({\n    krpanoRef,\n  });\n\n  const [tourEventState] = useTourEventState('state');\n\n  const [visibleModalConfirm, setVisibleModalConfirm] = useState(false);\n\n  const isFirstScene = useSelector(selectIsFirstScene);\n  const detailProject = useSelector(selectDetailProject);\n  const sceneSelected = useSelector(selectSceneSelected);\n  const configSound = useSelector(selectConfigSoundProject);\n\n  const bgSoundProject = detailProject?.background_sound;\n  const bgSoundScene = sceneSelected?.background_sound;\n\n  const isExistSoundOnScene = useMemo(\n    () =>\n      !!bgSoundProject ||\n      !!bgSoundScene ||\n      sceneSelected?.hotspots?.some(\n        item =>\n          (item.type === 'sound' &&\n            (item.config?.sound?.file || item.config?.sound?.url)) ||\n          (item.type === 'instructor' && item.config?.instructor?.media) ||\n          (item.type === 'media' &&\n            item.config?.media?.type === 'media-video' &&\n            item.config?.media?.media?.src),\n      ),\n    [bgSoundProject, bgSoundScene, sceneSelected],\n  );\n\n  const onCheckPlayPauseSoundScene = useCallback(() => {\n    if (soundSceneRef?.current)\n      if (!tourEventState.isSoundOnScene) soundSceneRef.current?.pause();\n      else soundSceneRef.current?.play();\n  }, [tourEventState]);\n\n  const onCheckPlayPauseSoundProject = useCallback(() => {\n    if (configSound) {\n      if (soundProjectRef.current) {\n        soundProjectRef.current.volume = configSound.on\n          ? detailProject?.background_sound_volume || 0.4\n          : 0;\n        soundProjectRef.current.muted = !configSound.on;\n        configSound.on && soundProjectRef.current?.play();\n      }\n      if (soundSceneRef.current) {\n        soundSceneRef.current.muted = !configSound.on;\n        soundSceneRef.current.volume = configSound.on\n          ? sceneSelected?.background_sound_volume || 0.8\n          : 0;\n        configSound.on && soundSceneRef.current?.play();\n      }\n    }\n  }, [\n    configSound,\n    detailProject?.background_sound_volume,\n    sceneSelected?.background_sound_volume,\n  ]);\n\n  /**\n   * NOTE: only open dialog confirm when exist hotspot sound on first scene\n   * NOTE: turn on alllow_sound on next_scenes (regardless not open_dialog_confirm on first_scene since !existHotspotSound)\n   *\n   */\n  useEffect(() => {\n    if (tourEventState.isVisiblePopupIntro === false && isExistSoundOnScene)\n      if (configSound?.on === undefined || configSound?.on === null) {\n        if (isFirstScene) setVisibleModalConfirm(true);\n        else onOKModalConfirm();\n      } else {\n        onCheckPlayPauseSoundProject();\n        onCheckPlayPauseSoundScene();\n      }\n    // else if (isFirstScene === false && configSound.on === null)\n    //   dispatch(actions.setConfigSoundProject({ on: true }));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isFirstScene, isExistSoundOnScene, tourEventState.isVisiblePopupIntro]);\n\n  // NOTE: refresh sound scene\n  useEffect(() => {\n    if (\n      isFirstScene === false &&\n      configSound.on &&\n      bgSoundScene &&\n      soundSceneRef.current\n    ) {\n      soundSceneRef.current.src = bgSoundScene?.src;\n      soundSceneRef.current.currentTime = 0;\n      soundSceneRef.current.volume = configSound.on\n        ? sceneSelected?.background_sound_volume || 0.8\n        : 0;\n      soundSceneRef.current.muted = !configSound.on;\n      onCheckPlayPauseSoundScene();\n    }\n    // NOTE: auto close dialog confirm if user change scene => allow sound on\n    // if (isFirstScene === false && visibleModalConfirm) {\n    //   setVisibleModalConfirm(false);\n    //   dispatch(actions.setConfigSoundProject({ on: true }));\n    // }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [sceneSelected, configSound]);\n\n  const onCloseModalConfirm = useCallback(\n    (isPassiveAction = false) => {\n      setVisibleModalConfirm(false);\n      if (!isPassiveAction) {\n        onSetSoundOnScene(false);\n        dispatch(actions.setConfigSoundProject({ on: false }));\n      }\n    },\n    [dispatch, onSetSoundOnScene],\n  );\n\n  const onOKModalConfirm = useCallback(() => {\n    onSetSoundOnScene(true);\n    dispatch(actions.setConfigSoundProject({ on: true }));\n\n    if (sceneSelected) onStartHotspotSound();\n    soundProjectRef.current?.play();\n    soundSceneRef.current?.play();\n\n    onCloseModalConfirm(true);\n  }, [\n    dispatch,\n    sceneSelected,\n    onSetSoundOnScene,\n    onStartHotspotSound,\n    onCloseModalConfirm,\n  ]);\n\n  useEffect(() => {\n    onCheckPlayPauseSoundProject();\n    if (configSound.on && visibleModalConfirm) onCloseModalConfirm(true);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [configSound]);\n\n  useEffect(() => {\n    onCheckPlayPauseSoundScene();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [tourEventState.isSoundOnScene]);\n\n  return (\n    <TourSettingWrapper>\n      {bgSoundProject && (\n        <audio className=\"el-hide\" loop autoPlay={false} ref={soundProjectRef}>\n          <source src={bgSoundProject?.src} type={bgSoundProject?.mimetype} />\n        </audio>\n      )}\n      {/* NOTE: re-render audio when scene change */}\n      {bgSoundScene && (\n        <audio className=\"el-hide\" loop autoPlay={false} ref={soundSceneRef}>\n          <source src={bgSoundScene?.src} type={bgSoundScene?.mimetype} />\n        </audio>\n      )}\n\n      {visibleModalConfirm && (\n        <ModalConfirm\n          visible={visibleModalConfirm}\n          onOK={onOKModalConfirm}\n          onCancel={onCloseModalConfirm.bind(this, false)}\n        />\n      )}\n    </TourSettingWrapper>\n  );\n};\n\nexport default memo(Tour);\n"],"names":["ModalConfirm","dynamic","__webpack_require__","e","then","bind","__webpack_exports__","memo","param","krpanoRef","dispatch","useDispatch","soundSceneRef","useRef","soundProjectRef","useKrpano","onSetSoundOnScene","onStartHotspotSound","tourEventState","useTourEventState","useState","visibleModalConfirm","setVisibleModalConfirm","isFirstScene","useSelector","selectIsFirstScene","detailProject","selectDetailProject","sceneSelected","selectSceneSelected","configSound","selectConfigSoundProject","bgSoundProject","background_sound","bgSoundScene","isExistSoundOnScene","useMemo","hotspots","some","item","type","config","sound","file","url","instructor","media","src","onCheckPlayPauseSoundScene","useCallback","current","isSoundOnScene","play","pause","onCheckPlayPauseSoundProject","volume","on","background_sound_volume","muted","useEffect","isVisiblePopupIntro","undefined","onOKModalConfirm","currentTime","onCloseModalConfirm","isPassiveAction","actions","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsxs","TourSettingWrapper","jsx","audio","className","loop","autoPlay","ref","source","mimetype","visible","onOK","onCancel","_this"],"sourceRoot":""}