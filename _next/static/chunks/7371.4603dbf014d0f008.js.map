{"version":3,"file":"static/chunks/7371.4603dbf014d0f008.js","mappings":"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","sources":["webpack://_N_E/./containers/Home/components/Floorplan/index.tsx","webpack://_N_E/./containers/Home/components/Floorplan/styled.ts","webpack://_N_E/./containers/Home/hook/useDetectMobile.tsx","webpack://_N_E/<anon>"],"sourcesContent":["/* eslint-disable jsx-a11y/mouse-events-have-key-events */\nimport { memo, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport dynamic from 'next/dynamic';\nimport { useTourEventState } from '@containers/Home/global/TourStats';\nimport { useMobileDetect } from '@containers/Home/hook/useDetectMobile';\nimport { selectConfigFloorplan } from '../../selectors';\nimport { I_Scene } from '../../types';\nimport { FloorplanWrapper } from './styled';\n\nconst Box = dynamic(() => import('./DisplayBox'));\nconst Panel = dynamic(() => import('./DisplayPanel'));\nconst PopupMobile = dynamic(() => import('./DisplayOnMobile'));\n\ninterface Props {\n  onChangeScene: (scene: I_Scene) => void;\n}\n\nconst Floorplan = memo(({ onChangeScene }: Props) => {\n  const { checkDevice } = useMobileDetect();\n  const configFloorplan = useSelector(selectConfigFloorplan);\n\n  const [, setTourEventStats] = useTourEventState('state');\n\n  useEffect(() => {\n    setTourEventStats(prev => ({\n      ...prev,\n      isVisibleFloorplan:\n        !checkDevice().isMobile() && !!configFloorplan?.isShowOnStart,\n    }));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [configFloorplan?.isShowOnStart]);\n\n  return checkDevice().isMobile() ? (\n    <PopupMobile onChangeScene={onChangeScene} />\n  ) : (\n    <FloorplanWrapper>\n      {configFloorplan?.floorplan?.type === 'box' ? (\n        <Box onChangeScene={onChangeScene} />\n      ) : (\n        <Panel onChangeScene={onChangeScene} />\n      )}\n    </FloorplanWrapper>\n  );\n});\n\nexport default Floorplan;\n","/* eslint-disable no-nested-ternary */\nimport styled, { css } from 'styled-components';\n\ninterface I_DisplayPanelFloorplan {\n  bgColor: string;\n  position: 'left' | 'right';\n}\n\ninterface I_DisplayBoxFloorplan {\n  bgColor: string;\n  position: 'bottomRight' | 'bottomLeft' | 'topLeft' | 'topRight';\n  offsetTop: number;\n  offsetBottom: number;\n  offsetLeft: number;\n  offsetRight: number;\n}\n\nexport const FloorplanWrapper = styled.div``;\n\nexport const ActionFloorplanWrapper = styled.div`\n  position: absolute;\n  width: 100%;\n  top: 8px;\n  padding: 0 8px;\n  display: flex;\n  border-radius: 6px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  z-index: 4;\n  pointer-events: none;\n  .--left {\n    background: rgb(0 0 0 / 0.5);\n    border-radius: 4px;\n    pointer-events: auto;\n  }\n  .--right {\n    display: flex;\n    align-items: center;\n    background: rgb(0 0 0 / 0.5);\n    border-radius: 4px;\n    overflow: hidden;\n    pointer-events: auto;\n  }\n  .action--item {\n    cursor: pointer;\n    transition: all 0.15s ease-out;\n    border: none;\n    padding: 0.25rem 0.5rem;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    border: none;\n    width: 2rem;\n    height: 2rem;\n    cursor: pointer;\n    color: #fff;\n    @media (hover: hover) and (pointer: fine) {\n      &:hover {\n        background: rgb(0 0 0 / 0.5);\n      }\n    }\n    &.--select {\n      width: max-content;\n    }\n    i {\n    }\n    &.--select {\n      i {\n        margin-right: 0px;\n        margin-left: 4px;\n      }\n    }\n    &:not(:last-child) {\n      border-right: 1px solid rgb(255 255 255 / 0.25);\n    }\n  }\n`;\n\nexport const FloorplanPanelWrapper = styled.div<I_DisplayPanelFloorplan>`\n  position: absolute;\n  width: 30%;\n  height: 100%;\n  transition: var(--transition-smooth);\n  display: flex;\n  align-items: center;\n  background: ${props => props.bgColor};\n  top: 0;\n  pointer-events: auto;\n  transform: none;\n  z-index: 10;\n  &.wall {\n    z-index: 2;\n  }\n  &.hide {\n    pointer-events: none;\n    z-index: -1;\n    ${props =>\n      props.position === 'right'\n        ? css`\n            transform: translateX(100%);\n          `\n        : css`\n            transform: translateX(-100%);\n          `}\n  }\n  &.basekrpano {\n  }\n  &.default {\n    ${props =>\n      props.position === 'right'\n        ? css`\n            right: 0;\n            top: 0;\n            height: 100%;\n          `\n        : css`\n            left: 0;\n            top: 94px;\n            height: calc(100% - 94px);\n          `}\n  }\n  &.custom1 {\n    height: calc(100% - 50px);\n  }\n  ${props =>\n    props.position === 'right'\n      ? css`\n          right: 0;\n        `\n      : css`\n          left: 0;\n        `}\n  .main {\n    width: 100%;\n    height: 100%;\n    overflow: hidden;\n  }\n  .react-transform-wrapper {\n    overflow: visible;\n    z-index: 2;\n  }\n`;\n\nexport const FloorplanBoxWrapper = styled.div<I_DisplayBoxFloorplan>`\n  position: absolute;\n  transition: var(--transition-smooth);\n  background: radial-gradient(50% 50% at 50% 50%, #626262 0%, #000000 100%);\n  background: ${props => props.bgColor};\n  border-radius: 12px;\n  overflow: hidden;\n  border: 2px solid #fff;\n  transform: none;\n  z-index: 10;\n  &.hide {\n    opacity: 0;\n    z-index: -1;\n    pointer-events: none;\n    ${props =>\n      props.position === 'bottomLeft'\n        ? css`\n            transform: translateX(-4rem);\n          `\n        : props.position === 'topLeft'\n        ? css`\n            transform: translateX(-4rem);\n          `\n        : props.position === 'topRight'\n        ? css`\n            transform: translateX(4rem);\n          `\n        : css`\n            transform: translateX(4rem);\n          `}\n  }\n  &.basekrpano {\n    /* opacity: 0.5; */\n  }\n  &.default {\n  }\n  &.custom1 {\n  }\n  ${props =>\n    props.position === 'bottomLeft'\n      ? css`\n          bottom: ${props.offsetBottom}px;\n          left: ${props.offsetLeft}px;\n          right: unset;\n          top: unset;\n        `\n      : props.position === 'topLeft'\n      ? css`\n          top: ${props.offsetTop}px;\n          left: ${props.offsetLeft}px;\n          bottom: unset;\n          right: unset;\n        `\n      : props.position === 'topRight'\n      ? css`\n          top: ${props.offsetTop}px;\n          right: ${props.offsetRight}px;\n          bottom: unset;\n          left: unset;\n        `\n      : css`\n          bottom: ${props.offsetBottom}px;\n          right: ${props.offsetRight}px;\n          left: unset;\n          top: unset;\n        `}\n`;\n\nexport const ImageFloorplanWrapper = styled.div`\n  position: relative;\n  img {\n    min-width: 450px;\n    width: 100%;\n    height: auto;\n  }\n`;\n\nexport const MarkerWrapper = styled.div`\n  position: absolute;\n  width: 18px;\n  height: 18px;\n  background-color: var(--color-blue);\n  border: 2px solid transparent;\n  border-radius: 50%;\n  cursor: pointer;\n  transform: scale(0.75);\n  svg {\n    pointer-events: none;\n  }\n  &.active {\n    box-shadow: 0 0 0 8px rgb(0 0 0 / 0.1);\n  }\n`;\n\nexport const PopupWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  position: relative;\n  ${ActionFloorplanWrapper} {\n    justify-content: center;\n    position: absolute;\n    top: 1rem;\n    left: 0;\n  }\n  img {\n    width: 100%;\n    height: auto;\n  }\n  ${MarkerWrapper} {\n    width: 24px;\n    height: 24px;\n    background-color: #007aff;\n    border: 1px solid #007aff;\n    border-width: 2px;\n  }\n`;\n","/* eslint-disable no-useless-escape */\nimport { useMemo, useCallback } from 'react';\n\nexport const useMobileDetect = () => {\n  const checkDevice = useCallback(() => {\n    const flagIsMobile =\n      typeof window === 'undefined'\n        ? 0\n        : window.matchMedia('only screen and (max-width: 760px)').matches;\n\n    const isMobile = () => flagIsMobile;\n\n    return {\n      isMobile,\n    };\n  }, []);\n\n  return useMemo(\n    () => ({\n      checkDevice,\n    }),\n    [checkDevice],\n  );\n};\n"],"names":["Box","dynamic","Promise","all","__webpack_require__","e","then","bind","Panel","PopupMobile","Floorplan","memo","param","configFloorplan","onChangeScene","checkDevice","useMobileDetect","useSelector","selectConfigFloorplan","setTourEventStats","useTourEventState","useEffect","prev","_swc_helpers_src_object_spread_props_mjs__WEBPACK_IMPORTED_MODULE_9__","Z","_swc_helpers_src_object_spread_mjs__WEBPACK_IMPORTED_MODULE_10__","isVisibleFloorplan","isMobile","isShowOnStart","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsx","FloorplanWrapper","floorplan","type","__webpack_exports__","styled","ActionFloorplanWrapper","FloorplanPanelWrapper","props","bgColor","position","css","FloorplanBoxWrapper","offsetBottom","offsetLeft","offsetTop","offsetRight","ImageFloorplanWrapper","MarkerWrapper","PopupWrapper","useCallback","flagIsMobile","window","matchMedia","matches","useMemo"],"sourceRoot":""}