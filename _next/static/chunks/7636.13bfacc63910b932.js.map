{"version":3,"file":"static/chunks/7636.13bfacc63910b932.js","mappings":"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","sources":["webpack://_N_E/./containers/Home/components/Collaboration/CommentScene/CommentBox.tsx","webpack://_N_E/<anon>"],"sourcesContent":["import { memo, useCallback, useEffect, useRef, useState } from 'react';\nimport { Button, Popover } from 'antd';\nimport Picker from 'emoji-picker-react';\nimport { CommentBoxWrapper } from './styled';\n\ninterface Props {\n  initValue: string;\n  loading?: boolean;\n  isShowBtnReset?: boolean;\n  isShowBtnCancel?: boolean;\n  onSubmit: (value: string) => void;\n  onCancel: () => void;\n}\n\nconst CommentBox = memo(\n  ({\n    initValue,\n    loading,\n    isShowBtnCancel = true,\n    isShowBtnReset = false,\n    onSubmit,\n    onCancel,\n  }: Props) => {\n    const inputRef = useRef<HTMLTextAreaElement>();\n    const [value, setValue] = useState(null);\n\n    const onCheckEscape = useCallback(\n      event => {\n        if (event.key === 'Escape') onCancel();\n        if (event.keyCode === 13) {\n          if (!event.shiftKey) {\n            onCancel();\n            onSubmit(value);\n            event.preventDefault();\n          }\n        }\n      },\n      [onCancel, onSubmit, value],\n    );\n\n    useEffect(() => {\n      const inputInstance = inputRef.current;\n      if (inputInstance)\n        inputInstance.addEventListener('keydown', onCheckEscape);\n      return () => {\n        if (inputInstance)\n          inputInstance.removeEventListener('keydown', onCheckEscape);\n      };\n    }, [onCheckEscape]);\n\n    useEffect(() => {\n      inputRef.current.focus();\n      if (value === null) setValue(initValue);\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [initValue]);\n\n    const onEmojiClick = useCallback((_e, emoji) => {\n      setValue(prev => prev + emoji.emoji);\n    }, []);\n\n    const _onReset = useCallback(() => {\n      setValue('');\n    }, []);\n\n    const _onSubmit = useCallback(() => {\n      onSubmit(value);\n      if (isShowBtnReset) _onReset();\n      onCancel();\n    }, [isShowBtnReset, _onReset, value, onSubmit, onCancel]);\n\n    return (\n      <CommentBoxWrapper>\n        <textarea\n          ref={inputRef}\n          value={value || ''}\n          onChange={e => setValue(e.target.value)}\n          rows={3}\n          placeholder=\"Write something...\"\n        />\n        <div className=\"--bottom\">\n          <div className=\"act-main\">\n            <Button\n              loading={loading}\n              size=\"small\"\n              className=\"--btn --submit\"\n              onClick={_onSubmit}\n            >\n              <i aria-hidden className=\"fal fa-check\" />\n              <span>Submit</span>\n            </Button>\n            {isShowBtnReset && (\n              <Button\n                size=\"small\"\n                className=\"--btn --cancel\"\n                onClick={_onReset}\n              >\n                <i aria-hidden className=\"fal fa-undo-alt\" />\n                <span>Reset</span>\n              </Button>\n            )}\n            {isShowBtnCancel && (\n              <Button\n                size=\"small\"\n                className=\"--btn --cancel\"\n                onClick={onCancel}\n              >\n                <i aria-hidden className=\"fal fa-times\" />\n                <span>Cancel</span>\n              </Button>\n            )}\n          </div>\n          <div className=\"act-extra\">\n            <Popover\n              trigger=\"click\"\n              content={\n                <Picker onEmojiClick={onEmojiClick} disableAutoFocus native />\n              }\n              onOpenChange={isVisible => {\n                if (!isVisible) inputRef.current?.focus();\n              }}\n              zIndex={101}\n            >\n              <i aria-hidden className=\"fas fa-grin-alt\" />\n            </Popover>\n          </div>\n        </div>\n      </CommentBoxWrapper>\n    );\n  },\n);\n\nexport default CommentBox;\n"],"names":["CommentBox","memo","param","initValue","loading","isShowBtnCancel","_param_isShowBtnReset","isShowBtnReset","onSubmit","onCancel","inputRef","useRef","useState","value","setValue","onCheckEscape","useCallback","event","key","keyCode","shiftKey","preventDefault","useEffect","inputInstance","current","addEventListener","removeEventListener","focus","onEmojiClick","_e","emoji","prev","_onReset","_onSubmit","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsxs","CommentBoxWrapper","jsx","textarea","ref","onChange","e","target","rows","placeholder","div","className","Button","size","onClick","i","aria-hidden","span","_param_isShowBtnCancel","Popover","trigger","content","Picker","disableAutoFocus","native","onOpenChange","isVisible","zIndex","__webpack_exports__"],"sourceRoot":""}