{"version":3,"file":"static/chunks/8580.3362db82c3a1974c.js","mappings":"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","sources":["webpack://_N_E/./node_modules/antd/es/_util/motion.js","webpack://_N_E/./node_modules/antd/es/_util/type.js","webpack://_N_E/./containers/Home/hook/useControlbarConfig.tsx","webpack://_N_E/./containers/Home/language.ts","webpack://_N_E/./containers/ThemeSolid/Controlbar.Right.tsx","webpack://_N_E/./node_modules/rc-util/es/hooks/useLayoutEffect.js","webpack://_N_E/<anon>"],"sourcesContent":["import { tuple } from './type';\n// ================== Collapse Motion ==================\nvar getCollapsedHeight = function getCollapsedHeight() {\n  return {\n    height: 0,\n    opacity: 0\n  };\n};\nvar getRealHeight = function getRealHeight(node) {\n  var scrollHeight = node.scrollHeight;\n  return {\n    height: scrollHeight,\n    opacity: 1\n  };\n};\nvar getCurrentHeight = function getCurrentHeight(node) {\n  return {\n    height: node ? node.offsetHeight : 0\n  };\n};\nvar skipOpacityTransition = function skipOpacityTransition(_, event) {\n  return (event === null || event === void 0 ? void 0 : event.deadline) === true || event.propertyName === 'height';\n};\nvar collapseMotion = {\n  motionName: 'ant-motion-collapse',\n  onAppearStart: getCollapsedHeight,\n  onEnterStart: getCollapsedHeight,\n  onAppearActive: getRealHeight,\n  onEnterActive: getRealHeight,\n  onLeaveStart: getCurrentHeight,\n  onLeaveActive: getCollapsedHeight,\n  onAppearEnd: skipOpacityTransition,\n  onEnterEnd: skipOpacityTransition,\n  onLeaveEnd: skipOpacityTransition,\n  motionDeadline: 500\n};\nvar SelectPlacements = tuple('bottomLeft', 'bottomRight', 'topLeft', 'topRight');\nvar getTransitionDirection = function getTransitionDirection(placement) {\n  if (placement !== undefined && (placement === 'topLeft' || placement === 'topRight')) {\n    return \"slide-down\";\n  }\n  return \"slide-up\";\n};\nvar getTransitionName = function getTransitionName(rootPrefixCls, motion, transitionName) {\n  if (transitionName !== undefined) {\n    return transitionName;\n  }\n  return \"\".concat(rootPrefixCls, \"-\").concat(motion);\n};\nexport { getTransitionName, getTransitionDirection };\nexport default collapseMotion;","// https://stackoverflow.com/questions/46176165/ways-to-get-string-literal-type-of-array-values-without-enum-overhead\nexport var tuple = function tuple() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n  return args;\n};\nexport var tupleNum = function tupleNum() {\n  for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    args[_key2] = arguments[_key2];\n  }\n  return args;\n};","import { useCallback, useMemo } from 'react';\nimport { useSelector } from 'react-redux';\nimport { selectConfigControlbar } from '../selectors';\nimport { I_ControlbarKey } from '../types';\n\nexport const useControlbarConfig = () => {\n  const controlbarConfig = useSelector(selectConfigControlbar);\n\n  const onCheckIsShowContentControlbarItem = useCallback(\n    (type: I_ControlbarKey) => {\n      if (type) {\n        const config = controlbarConfig[type];\n        return !config.isHide;\n      }\n      return true;\n    },\n    [controlbarConfig],\n  );\n\n  const onRenderContentControlbarItem = useCallback(\n    (type: I_ControlbarKey) => {\n      if (type) {\n        const config = controlbarConfig[type];\n        if (config.type === 'icon' && config.icon)\n          return (\n            <i aria-hidden className={`controlbar-item__icon ${config.icon}`} />\n          );\n        if (config.type === 'image' && config.image?.src)\n          return (\n            <img\n              className=\"controlbar-item__img\"\n              src={config.image?.src}\n              alt=\"img\"\n            />\n          );\n      }\n      return '';\n    },\n    [controlbarConfig],\n  );\n\n  return useMemo(\n    () => ({\n      onRenderContentControlbarItem,\n      onCheckIsShowContentControlbarItem,\n    }),\n    [onRenderContentControlbarItem, onCheckIsShowContentControlbarItem],\n  );\n};\n","export const LANGUAGES = {\n  en: {\n    dialogConfirmSoundTitle: 'Auto play sound on this website?',\n    btnOK: 'OK',\n    btnCancel: 'Cancel',\n    controlbarFirstScene: 'Go to first scene',\n    controlbarInfoTour: 'Info Tour',\n    controlbarInfoScene: 'Info Scene',\n    controlbarMap: 'Google Map',\n    controlbarFloorplan: 'Floorplan',\n    controlbarTurnOnSoundProject: 'Unmute sound',\n    controlbarTurnOffSoundProject: 'Mute sound',\n    controlbarSoundScene: 'Sound scene',\n    controlbarStopRotate: 'Stop Rotate',\n    controlbarStartRotate: 'Rotate',\n    controlbarStartAutoPlayScene: 'Auto play scene',\n    controlbarStopAutoPlayScene: 'Stop auto play scene',\n    controlbarVRMode: 'VR Mode',\n    controlbarFullscreen: 'Toggle Fullscreen',\n    controlbarViewNormal: 'View Normal',\n    controlbarViewPlanet: 'View Little Planet',\n    controlbarViewMirrorBall: 'View Mirror Ball',\n    controlbarSettingColor: 'Change color',\n    controlbarTurnOffModeMultipleStaging: 'Disable Staging',\n    controlbarTurnOnModeMultipleStaging: 'Enable Staging',\n  },\n  vi: {\n    dialogConfirmSoundTitle: 'Tự động phát nhạc?',\n    btnOK: 'OK',\n    btnCancel: 'Huỷ bỏ',\n    controlbarFirstScene: 'Cảnh đầu tiên',\n    controlbarInfoTour: 'Thông tin tour',\n    controlbarInfoScene: 'Thông tin cảnh',\n    controlbarFloorplan: 'Floorplan',\n    controlbarMap: 'Google Map',\n    controlbarTurnOnSoundProject: 'Bật âm lượng',\n    controlbarTurnOffSoundProject: 'Tắt âm lượng',\n    controlbarSoundScene: 'Âm thanh cảnh',\n    controlbarStopRotate: 'Dừng xoay',\n    controlbarStartRotate: 'Xoay',\n    controlbarStartAutoPlayScene: 'Tự động chuyển cảnh',\n    controlbarStopAutoPlayScene: 'Dừng tự động chuyển cảnh',\n    controlbarVRMode: 'Chế độ VR',\n    controlbarFullscreen: 'Chuyển đổi chế độ toàn màn hình',\n    controlbarViewNormal: 'Chế độ mặc định',\n    controlbarViewPlanet: 'Chế độ toàn cầu',\n    controlbarViewMirrorBall: 'Chế độ gương',\n    controlbarSettingColor: 'Thay đổi màu',\n    controlbarTurnOffModeMultipleStaging: 'Tắt chế độ Staging',\n    controlbarTurnOnModeMultipleStaging: 'Bật chế độ Staging',\n  },\n};\n","import { Type_RefFuncKrpano } from '@components/Krpano/types';\nimport { useKrpano } from '@containers/Home/hook/useKrpano';\nimport {\n  selectConfigSoundProject,\n  selectLanguageProject,\n} from '@containers/Home/selectors';\nimport { Tooltip } from 'antd';\nimport React, { memo, useCallback } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useTourStats } from '@containers/Home/global/TourStats';\nimport { LANGUAGES } from '@containers/Home/language';\nimport { useControlbarConfig } from '@containers/Home/hook/useControlbarConfig';\n\ninterface Props {\n  krpanoRef: Type_RefFuncKrpano;\n}\n\nconst ControlbarRight = memo(({ krpanoRef }: Props) => {\n  const { onCheckIsShowContentControlbarItem, onRenderContentControlbarItem } =\n    useControlbarConfig();\n  const languageProject = useSelector(selectLanguageProject);\n  const configSoundProject = useSelector(selectConfigSoundProject);\n\n  const [tourStats, setTourStats] = useTourStats('stats');\n\n  const onToggleAction = useCallback(\n    () =>\n      setTourStats(prev => ({\n        ...prev,\n        isShowControlbar: !prev.isShowControlbar,\n      })),\n    [setTourStats],\n  );\n\n  const {\n    //\n    onFullscreen,\n    onToggleGyro,\n    // NOTE: floorplan\n    isShowIconFloorplan,\n    onToggleFloorplan,\n    // NOTE: map\n    isShowIconMap,\n    onToggleMap,\n    // NOTE: sound project\n    isShowIconSoundProject,\n    onTurnOffSoundProject,\n    onTurnOnSoundProject,\n  } = useKrpano({ krpanoRef });\n\n  return (\n    <div className=\"actGroup\">\n      {isShowIconSoundProject &&\n        onCheckIsShowContentControlbarItem('sound_project_off') &&\n        onCheckIsShowContentControlbarItem('sound_project_on') && (\n          <Tooltip\n            title={\n              configSoundProject.on\n                ? LANGUAGES[languageProject].controlbarTurnOffSoundProject\n                : LANGUAGES[languageProject].controlbarTurnOnSoundProject\n            }\n            placement=\"top\"\n          >\n            <button\n              type=\"button\"\n              className=\"act\"\n              onClick={\n                configSoundProject.on\n                  ? onTurnOffSoundProject\n                  : onTurnOnSoundProject\n              }\n            >\n              {configSoundProject.on\n                ? onRenderContentControlbarItem('sound_project_off')\n                : onRenderContentControlbarItem('sound_project_on')}\n            </button>\n          </Tooltip>\n        )}\n\n      {isShowIconFloorplan && onCheckIsShowContentControlbarItem('floorplan') && (\n        <Tooltip\n          trigger=\"hover\"\n          title={LANGUAGES[languageProject].controlbarFloorplan}\n          placement=\"top\"\n        >\n          <button\n            type=\"button\"\n            className=\"act\"\n            onClick={onToggleFloorplan.bind(this, undefined)}\n          >\n            {onRenderContentControlbarItem('floorplan')}\n          </button>\n        </Tooltip>\n      )}\n\n      {isShowIconMap && onCheckIsShowContentControlbarItem('map') && (\n        <Tooltip\n          trigger=\"hover\"\n          title={LANGUAGES[languageProject].controlbarMap}\n          placement=\"top\"\n        >\n          <button\n            type=\"button\"\n            className=\"act\"\n            onClick={onToggleMap.bind(this, undefined)}\n          >\n            {onRenderContentControlbarItem('map')}\n          </button>\n        </Tooltip>\n      )}\n\n      {onCheckIsShowContentControlbarItem('fullscreen') && (\n        <Tooltip\n          trigger=\"hover\"\n          title={LANGUAGES[languageProject].controlbarFullscreen}\n          placement=\"top\"\n        >\n          <button type=\"button\" className=\"act \" onClick={onFullscreen}>\n            {onRenderContentControlbarItem('fullscreen')}\n          </button>\n        </Tooltip>\n      )}\n\n      {onCheckIsShowContentControlbarItem('gyro') && (\n        <button\n          type=\"button\"\n          className=\"act show-on-mobile\"\n          onClick={onToggleGyro}\n        >\n          {onRenderContentControlbarItem('gyro')}\n        </button>\n      )}\n\n      <button\n        type=\"button\"\n        className=\"act act-toggle__controlbar show-on-mobile\"\n        onClick={onToggleAction}\n      >\n        <i\n          className={`fal fa-angle-down ${\n            tourStats.isShowControlbar ? '' : 'hide'\n          }`}\n        />\n      </button>\n    </div>\n  );\n});\n\nexport default ControlbarRight;\n","import * as React from 'react';\nimport canUseDom from \"../Dom/canUseDom\";\n\n/**\n * Wrap `React.useLayoutEffect` which will not throw warning message in test env\n */\nvar useLayoutEffect = process.env.NODE_ENV !== 'test' && canUseDom() ? React.useLayoutEffect : React.useEffect;\nexport default useLayoutEffect;\nexport var useLayoutUpdateEffect = function useLayoutUpdateEffect(callback, deps) {\n  var firstMountRef = React.useRef(true);\n  useLayoutEffect(function () {\n    if (!firstMountRef.current) {\n      return callback();\n    }\n  }, deps);\n\n  // We tell react that first mount has passed\n  useLayoutEffect(function () {\n    firstMountRef.current = false;\n    return function () {\n      firstMountRef.current = true;\n    };\n  }, []);\n};"],"names":["getCollapsedHeight","height","opacity","getRealHeight","node","scrollHeight","skipOpacityTransition","_","event","deadline","propertyName","_type__WEBPACK_IMPORTED_MODULE_0__","b","getTransitionDirection","placement","undefined","getTransitionName","rootPrefixCls","motion","transitionName","concat","__webpack_exports__","motionName","onAppearStart","onEnterStart","onAppearActive","onEnterActive","onLeaveStart","offsetHeight","onLeaveActive","onAppearEnd","onEnterEnd","onLeaveEnd","motionDeadline","tuple","_len","arguments","length","args","_key","tupleNum","_len2","_key2","useControlbarConfig","controlbarConfig","useSelector","selectConfigControlbar","onCheckIsShowContentControlbarItem","useCallback","type","config","isHide","onRenderContentControlbarItem","icon","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsx","i","aria-hidden","className","image","src","img","alt","useMemo","LANGUAGES","en","dialogConfirmSoundTitle","btnOK","btnCancel","controlbarFirstScene","controlbarInfoTour","controlbarInfoScene","controlbarMap","controlbarFloorplan","controlbarTurnOnSoundProject","controlbarTurnOffSoundProject","controlbarSoundScene","controlbarStopRotate","controlbarStartRotate","controlbarStartAutoPlayScene","controlbarStopAutoPlayScene","controlbarVRMode","controlbarFullscreen","controlbarViewNormal","controlbarViewPlanet","controlbarViewMirrorBall","controlbarSettingColor","controlbarTurnOffModeMultipleStaging","controlbarTurnOnModeMultipleStaging","vi","ControlbarRight","memo","param","krpanoRef","languageProject","selectLanguageProject","configSoundProject","selectConfigSoundProject","useTourStats","tourStats","setTourStats","onToggleAction","prev","_swc_helpers_src_object_spread_props_mjs__WEBPACK_IMPORTED_MODULE_9__","Z","_swc_helpers_src_object_spread_mjs__WEBPACK_IMPORTED_MODULE_10__","isShowControlbar","useKrpano","onFullscreen","onToggleGyro","isShowIconFloorplan","onToggleFloorplan","isShowIconMap","onToggleMap","isShowIconSoundProject","onTurnOffSoundProject","onTurnOnSoundProject","jsxs","div","Tooltip","title","on","button","onClick","trigger","bind","_this","useLayoutEffect","_Dom_canUseDom__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_0__","useEffect","useLayoutUpdateEffect","callback","deps","firstMountRef","useRef","current"],"sourceRoot":""}