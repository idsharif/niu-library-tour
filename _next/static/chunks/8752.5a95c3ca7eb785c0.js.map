{"version":3,"file":"static/chunks/8752.5a95c3ca7eb785c0.js","mappings":"kKAIMA,EAAWC,IAAQ,kBAAMC,EAAAC,CAAA,OAAAC,IAAA,CAAAF,EAAAG,IAAA,CAAAH,EAAA,kEAczBI,EAAeC,CAAAA,EAAAA,EAAAA,UAAAA,EACnB,SAAAC,CAAA,CAOEC,CAAAA,CACG,KANDC,EAAAA,EAAAA,QAAAA,CAAAA,EAAAA,EACAC,UAAAA,CAAAA,EAAAA,KAAAA,IAAAA,EAAa,EAAE,CAAAC,CAAA,CAAAC,EAAAL,EACfM,WAAAA,CAAqBC,EAAAP,EACrBQ,eAAAA,CAAAA,EAAAA,KAAAA,IAAAA,EAAkB,UAAM,CAAC,EAAAD,CAAA,CAI3B,MACE,GAAAE,EAAAC,GAAA,EAACC,EAAAA,EAAmBA,CAAAA,CAACV,IAAKA,EAAKW,aAN/BN,KAAAA,IAAAA,EAAc,UAAM,CAAC,EAAAD,CAAA,UAOlBH,EAASW,GAAG,CAACC,SAAAA,CAAAA,CAAAA,CACZ,SAAAL,EAAAC,GAAA,EAAClB,EAAAA,CAECuB,KAAMD,EAAKC,IAAI,CACfC,UAAWF,EAAKE,SAAS,CACzBC,MAAOH,EAAKG,KAAK,CACjBC,QAASV,EACTW,OAAQhB,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAYiB,OAAO,CAACN,EAAKC,IAAI,KAAM,IALtCD,EAAKC,IAAI,KAUxB,EAGFM,CAAAA,EAAA,QAAevB,ivDCrCR,IAAMwB,EAAkBC,EAAAA,EAAAA,CAAAA,GAAAA,CAAAA,UAAU,kFACrCC,EAAAA,EAAYA,CAKHC,SAAAA,CAAAA,CAAAA,QAASA,EAAMC,OAAO,GAiBtBf,EAAsBY,EAAAA,EAAAA,CAAAA,GAAAA,CAAAA,UAAU,sFA8BzCD,GAUyCC,CAAAA,EAAAA,EAAAA,EAAAA,EAAOZ,GAAAA,UAAAA,CAAAA,+FAIhDW","sources":["webpack://_N_E/./components/MenuDropdown/index.tsx","webpack://_N_E/./components/MenuDropdown/styled.ts","webpack://_N_E/<anon>"],"sourcesContent":["import dynamic from 'next/dynamic';\nimport React, { forwardRef } from 'react';\nimport { MenuDropdownWrapper } from './styled';\n\nconst MenuItem = dynamic(() => import('./MenuItem'));\nexport interface I_Menu {\n  type: string;\n  classIcon: string;\n  label: string;\n}\n\ninterface Props {\n  listMenu: I_Menu[];\n  menuActive?: string[];\n  onCloseMenu?: () => void;\n  onTriggerAction?: ({ type }) => void;\n}\n\nconst MenuDropdown = forwardRef(\n  (\n    {\n      listMenu,\n      menuActive = [],\n      onCloseMenu = () => {},\n      onTriggerAction = () => {},\n    }: Props,\n    ref: any,\n  ) => {\n    return (\n      <MenuDropdownWrapper ref={ref} onMouseLeave={onCloseMenu}>\n        {listMenu.map(item => (\n          <MenuItem\n            key={item.type}\n            type={item.type}\n            classIcon={item.classIcon}\n            label={item.label}\n            onClick={onTriggerAction}\n            active={menuActive?.indexOf(item.type) !== -1}\n          />\n        ))}\n      </MenuDropdownWrapper>\n    );\n  },\n);\n\nexport default MenuDropdown;\n","/**\n *\n * styled MenuDropdown\n *\n */\nimport styled from 'styled-components';\nimport { FlexRowStart } from '@styles/global-styles';\n\nexport const MenuItemWrapper = styled.div<{ opacity: number }>`\n  ${FlexRowStart};\n  margin: 0 0 0.25rem;\n  transition: all 0.15s ease;\n  border-radius: 4px;\n  cursor: pointer;\n  opacity: ${props => props.opacity};\n  color: rgb(255 255 255 / 0.5);\n  padding: 4px 6px;\n  margin: 2px;\n  i {\n    margin: 0 0.5rem 0 0;\n    font-size: 1rem;\n    color: #fff;\n  }\n  .menu-item__label {\n    color: inherit;\n  }\n  &.active {\n    background: #595959;\n  }\n`;\n\nexport const MenuDropdownWrapper = styled.div`\n  background-color: var(--color-dark);\n  border: 1px solid rgb(255 255 255 / 0.15);\n  border-radius: 0.75rem;\n  padding: 0.5rem;\n  position: relative;\n  min-width: 180px;\n  transition: all 0.15s ease-out;\n  &::before {\n    content: '';\n    position: absolute;\n    width: calc(100% + 12px);\n    height: calc(100% + 12px);\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    z-index: -1;\n  }\n  &::after {\n    /* content: '';\n    position: absolute;\n    bottom: -50px;\n    width: 100%;\n    height: 50px;\n    left: 0; */\n  }\n  i {\n    width: 16px;\n    height: 16px;\n  }\n  ${MenuItemWrapper} {\n    @media (hover: hover) and (pointer: fine) {\n      &:hover {\n        background: var(--color-dark-2);\n        color: #fff;\n      }\n    }\n  }\n`;\n\nexport const MenuDropdownTypeColumnWrapper = styled(MenuDropdownWrapper)`\n  min-width: auto;\n  display: flex;\n  flex-direction: column;\n  ${MenuItemWrapper} {\n    margin: 0;\n    align-items: center;\n    justify-content: flex-start;\n    padding: 0.5rem;\n    .menu-item__label {\n    }\n    @media (hover: hover) and (pointer: fine) {\n      &:hover {\n        padding: 0.5rem;\n      }\n    }\n  }\n`;\n"],"names":["MenuItem","dynamic","__webpack_require__","e","then","bind","MenuDropdown","forwardRef","param","ref","listMenu","menuActive","_param_menuActive","_param_onCloseMenu","onCloseMenu","_param_onTriggerAction","onTriggerAction","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsx","MenuDropdownWrapper","onMouseLeave","map","item","type","classIcon","label","onClick","active","indexOf","__webpack_exports__","MenuItemWrapper","styled","FlexRowStart","props","opacity"],"sourceRoot":""}